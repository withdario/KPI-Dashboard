
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model BusinessEntity
 * 
 */
export type BusinessEntity = $Result.DefaultSelection<Prisma.$BusinessEntityPayload>
/**
 * Model GoogleAnalyticsIntegration
 * 
 */
export type GoogleAnalyticsIntegration = $Result.DefaultSelection<Prisma.$GoogleAnalyticsIntegrationPayload>
/**
 * Model N8nIntegration
 * 
 */
export type N8nIntegration = $Result.DefaultSelection<Prisma.$N8nIntegrationPayload>
/**
 * Model N8nWebhookEvent
 * 
 */
export type N8nWebhookEvent = $Result.DefaultSelection<Prisma.$N8nWebhookEventPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.businessEntity`: Exposes CRUD operations for the **BusinessEntity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BusinessEntities
    * const businessEntities = await prisma.businessEntity.findMany()
    * ```
    */
  get businessEntity(): Prisma.BusinessEntityDelegate<ExtArgs>;

  /**
   * `prisma.googleAnalyticsIntegration`: Exposes CRUD operations for the **GoogleAnalyticsIntegration** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GoogleAnalyticsIntegrations
    * const googleAnalyticsIntegrations = await prisma.googleAnalyticsIntegration.findMany()
    * ```
    */
  get googleAnalyticsIntegration(): Prisma.GoogleAnalyticsIntegrationDelegate<ExtArgs>;

  /**
   * `prisma.n8nIntegration`: Exposes CRUD operations for the **N8nIntegration** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more N8nIntegrations
    * const n8nIntegrations = await prisma.n8nIntegration.findMany()
    * ```
    */
  get n8nIntegration(): Prisma.N8nIntegrationDelegate<ExtArgs>;

  /**
   * `prisma.n8nWebhookEvent`: Exposes CRUD operations for the **N8nWebhookEvent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more N8nWebhookEvents
    * const n8nWebhookEvents = await prisma.n8nWebhookEvent.findMany()
    * ```
    */
  get n8nWebhookEvent(): Prisma.N8nWebhookEventDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    BusinessEntity: 'BusinessEntity',
    GoogleAnalyticsIntegration: 'GoogleAnalyticsIntegration',
    N8nIntegration: 'N8nIntegration',
    N8nWebhookEvent: 'N8nWebhookEvent'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "businessEntity" | "googleAnalyticsIntegration" | "n8nIntegration" | "n8nWebhookEvent"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      BusinessEntity: {
        payload: Prisma.$BusinessEntityPayload<ExtArgs>
        fields: Prisma.BusinessEntityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BusinessEntityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessEntityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BusinessEntityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessEntityPayload>
          }
          findFirst: {
            args: Prisma.BusinessEntityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessEntityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BusinessEntityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessEntityPayload>
          }
          findMany: {
            args: Prisma.BusinessEntityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessEntityPayload>[]
          }
          create: {
            args: Prisma.BusinessEntityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessEntityPayload>
          }
          createMany: {
            args: Prisma.BusinessEntityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BusinessEntityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessEntityPayload>[]
          }
          delete: {
            args: Prisma.BusinessEntityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessEntityPayload>
          }
          update: {
            args: Prisma.BusinessEntityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessEntityPayload>
          }
          deleteMany: {
            args: Prisma.BusinessEntityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BusinessEntityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BusinessEntityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BusinessEntityPayload>
          }
          aggregate: {
            args: Prisma.BusinessEntityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBusinessEntity>
          }
          groupBy: {
            args: Prisma.BusinessEntityGroupByArgs<ExtArgs>
            result: $Utils.Optional<BusinessEntityGroupByOutputType>[]
          }
          count: {
            args: Prisma.BusinessEntityCountArgs<ExtArgs>
            result: $Utils.Optional<BusinessEntityCountAggregateOutputType> | number
          }
        }
      }
      GoogleAnalyticsIntegration: {
        payload: Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>
        fields: Prisma.GoogleAnalyticsIntegrationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GoogleAnalyticsIntegrationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoogleAnalyticsIntegrationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GoogleAnalyticsIntegrationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoogleAnalyticsIntegrationPayload>
          }
          findFirst: {
            args: Prisma.GoogleAnalyticsIntegrationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoogleAnalyticsIntegrationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GoogleAnalyticsIntegrationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoogleAnalyticsIntegrationPayload>
          }
          findMany: {
            args: Prisma.GoogleAnalyticsIntegrationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoogleAnalyticsIntegrationPayload>[]
          }
          create: {
            args: Prisma.GoogleAnalyticsIntegrationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoogleAnalyticsIntegrationPayload>
          }
          createMany: {
            args: Prisma.GoogleAnalyticsIntegrationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GoogleAnalyticsIntegrationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoogleAnalyticsIntegrationPayload>[]
          }
          delete: {
            args: Prisma.GoogleAnalyticsIntegrationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoogleAnalyticsIntegrationPayload>
          }
          update: {
            args: Prisma.GoogleAnalyticsIntegrationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoogleAnalyticsIntegrationPayload>
          }
          deleteMany: {
            args: Prisma.GoogleAnalyticsIntegrationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GoogleAnalyticsIntegrationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.GoogleAnalyticsIntegrationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GoogleAnalyticsIntegrationPayload>
          }
          aggregate: {
            args: Prisma.GoogleAnalyticsIntegrationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGoogleAnalyticsIntegration>
          }
          groupBy: {
            args: Prisma.GoogleAnalyticsIntegrationGroupByArgs<ExtArgs>
            result: $Utils.Optional<GoogleAnalyticsIntegrationGroupByOutputType>[]
          }
          count: {
            args: Prisma.GoogleAnalyticsIntegrationCountArgs<ExtArgs>
            result: $Utils.Optional<GoogleAnalyticsIntegrationCountAggregateOutputType> | number
          }
        }
      }
      N8nIntegration: {
        payload: Prisma.$N8nIntegrationPayload<ExtArgs>
        fields: Prisma.N8nIntegrationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.N8nIntegrationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nIntegrationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.N8nIntegrationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nIntegrationPayload>
          }
          findFirst: {
            args: Prisma.N8nIntegrationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nIntegrationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.N8nIntegrationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nIntegrationPayload>
          }
          findMany: {
            args: Prisma.N8nIntegrationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nIntegrationPayload>[]
          }
          create: {
            args: Prisma.N8nIntegrationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nIntegrationPayload>
          }
          createMany: {
            args: Prisma.N8nIntegrationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.N8nIntegrationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nIntegrationPayload>[]
          }
          delete: {
            args: Prisma.N8nIntegrationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nIntegrationPayload>
          }
          update: {
            args: Prisma.N8nIntegrationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nIntegrationPayload>
          }
          deleteMany: {
            args: Prisma.N8nIntegrationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.N8nIntegrationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.N8nIntegrationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nIntegrationPayload>
          }
          aggregate: {
            args: Prisma.N8nIntegrationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateN8nIntegration>
          }
          groupBy: {
            args: Prisma.N8nIntegrationGroupByArgs<ExtArgs>
            result: $Utils.Optional<N8nIntegrationGroupByOutputType>[]
          }
          count: {
            args: Prisma.N8nIntegrationCountArgs<ExtArgs>
            result: $Utils.Optional<N8nIntegrationCountAggregateOutputType> | number
          }
        }
      }
      N8nWebhookEvent: {
        payload: Prisma.$N8nWebhookEventPayload<ExtArgs>
        fields: Prisma.N8nWebhookEventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.N8nWebhookEventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nWebhookEventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.N8nWebhookEventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nWebhookEventPayload>
          }
          findFirst: {
            args: Prisma.N8nWebhookEventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nWebhookEventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.N8nWebhookEventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nWebhookEventPayload>
          }
          findMany: {
            args: Prisma.N8nWebhookEventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nWebhookEventPayload>[]
          }
          create: {
            args: Prisma.N8nWebhookEventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nWebhookEventPayload>
          }
          createMany: {
            args: Prisma.N8nWebhookEventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.N8nWebhookEventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nWebhookEventPayload>[]
          }
          delete: {
            args: Prisma.N8nWebhookEventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nWebhookEventPayload>
          }
          update: {
            args: Prisma.N8nWebhookEventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nWebhookEventPayload>
          }
          deleteMany: {
            args: Prisma.N8nWebhookEventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.N8nWebhookEventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.N8nWebhookEventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$N8nWebhookEventPayload>
          }
          aggregate: {
            args: Prisma.N8nWebhookEventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateN8nWebhookEvent>
          }
          groupBy: {
            args: Prisma.N8nWebhookEventGroupByArgs<ExtArgs>
            result: $Utils.Optional<N8nWebhookEventGroupByOutputType>[]
          }
          count: {
            args: Prisma.N8nWebhookEventCountArgs<ExtArgs>
            result: $Utils.Optional<N8nWebhookEventCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type BusinessEntityCountOutputType
   */

  export type BusinessEntityCountOutputType = {
    users: number
    googleAnalytics: number
    n8nIntegrations: number
  }

  export type BusinessEntityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | BusinessEntityCountOutputTypeCountUsersArgs
    googleAnalytics?: boolean | BusinessEntityCountOutputTypeCountGoogleAnalyticsArgs
    n8nIntegrations?: boolean | BusinessEntityCountOutputTypeCountN8nIntegrationsArgs
  }

  // Custom InputTypes
  /**
   * BusinessEntityCountOutputType without action
   */
  export type BusinessEntityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntityCountOutputType
     */
    select?: BusinessEntityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BusinessEntityCountOutputType without action
   */
  export type BusinessEntityCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * BusinessEntityCountOutputType without action
   */
  export type BusinessEntityCountOutputTypeCountGoogleAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GoogleAnalyticsIntegrationWhereInput
  }

  /**
   * BusinessEntityCountOutputType without action
   */
  export type BusinessEntityCountOutputTypeCountN8nIntegrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: N8nIntegrationWhereInput
  }


  /**
   * Count Type N8nIntegrationCountOutputType
   */

  export type N8nIntegrationCountOutputType = {
    webhookEvents: number
  }

  export type N8nIntegrationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    webhookEvents?: boolean | N8nIntegrationCountOutputTypeCountWebhookEventsArgs
  }

  // Custom InputTypes
  /**
   * N8nIntegrationCountOutputType without action
   */
  export type N8nIntegrationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegrationCountOutputType
     */
    select?: N8nIntegrationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * N8nIntegrationCountOutputType without action
   */
  export type N8nIntegrationCountOutputTypeCountWebhookEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: N8nWebhookEventWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    isActive: boolean | null
    emailVerified: boolean | null
    emailVerificationToken: string | null
    passwordResetToken: string | null
    passwordResetExpires: Date | null
    lastLoginAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    businessEntityId: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    isActive: boolean | null
    emailVerified: boolean | null
    emailVerificationToken: string | null
    passwordResetToken: string | null
    passwordResetExpires: Date | null
    lastLoginAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    businessEntityId: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    firstName: number
    lastName: number
    isActive: number
    emailVerified: number
    emailVerificationToken: number
    passwordResetToken: number
    passwordResetExpires: number
    lastLoginAt: number
    createdAt: number
    updatedAt: number
    businessEntityId: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    isActive?: true
    emailVerified?: true
    emailVerificationToken?: true
    passwordResetToken?: true
    passwordResetExpires?: true
    lastLoginAt?: true
    createdAt?: true
    updatedAt?: true
    businessEntityId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    isActive?: true
    emailVerified?: true
    emailVerificationToken?: true
    passwordResetToken?: true
    passwordResetExpires?: true
    lastLoginAt?: true
    createdAt?: true
    updatedAt?: true
    businessEntityId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    isActive?: true
    emailVerified?: true
    emailVerificationToken?: true
    passwordResetToken?: true
    passwordResetExpires?: true
    lastLoginAt?: true
    createdAt?: true
    updatedAt?: true
    businessEntityId?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    password: string
    firstName: string
    lastName: string
    isActive: boolean
    emailVerified: boolean
    emailVerificationToken: string | null
    passwordResetToken: string | null
    passwordResetExpires: Date | null
    lastLoginAt: Date | null
    createdAt: Date
    updatedAt: Date
    businessEntityId: string
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    isActive?: boolean
    emailVerified?: boolean
    emailVerificationToken?: boolean
    passwordResetToken?: boolean
    passwordResetExpires?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businessEntityId?: boolean
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    isActive?: boolean
    emailVerified?: boolean
    emailVerificationToken?: boolean
    passwordResetToken?: boolean
    passwordResetExpires?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businessEntityId?: boolean
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    isActive?: boolean
    emailVerified?: boolean
    emailVerificationToken?: boolean
    passwordResetToken?: boolean
    passwordResetExpires?: boolean
    lastLoginAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businessEntityId?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      businessEntity: Prisma.$BusinessEntityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      firstName: string
      lastName: string
      isActive: boolean
      emailVerified: boolean
      emailVerificationToken: string | null
      passwordResetToken: string | null
      passwordResetExpires: Date | null
      lastLoginAt: Date | null
      createdAt: Date
      updatedAt: Date
      businessEntityId: string
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businessEntity<T extends BusinessEntityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BusinessEntityDefaultArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly emailVerificationToken: FieldRef<"User", 'String'>
    readonly passwordResetToken: FieldRef<"User", 'String'>
    readonly passwordResetExpires: FieldRef<"User", 'DateTime'>
    readonly lastLoginAt: FieldRef<"User", 'DateTime'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly businessEntityId: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model BusinessEntity
   */

  export type AggregateBusinessEntity = {
    _count: BusinessEntityCountAggregateOutputType | null
    _min: BusinessEntityMinAggregateOutputType | null
    _max: BusinessEntityMaxAggregateOutputType | null
  }

  export type BusinessEntityMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    domain: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessEntityMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    domain: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BusinessEntityCountAggregateOutputType = {
    id: number
    name: number
    description: number
    domain: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BusinessEntityMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    domain?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessEntityMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    domain?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BusinessEntityCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    domain?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BusinessEntityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessEntity to aggregate.
     */
    where?: BusinessEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessEntities to fetch.
     */
    orderBy?: BusinessEntityOrderByWithRelationInput | BusinessEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BusinessEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessEntities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BusinessEntities
    **/
    _count?: true | BusinessEntityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BusinessEntityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BusinessEntityMaxAggregateInputType
  }

  export type GetBusinessEntityAggregateType<T extends BusinessEntityAggregateArgs> = {
        [P in keyof T & keyof AggregateBusinessEntity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBusinessEntity[P]>
      : GetScalarType<T[P], AggregateBusinessEntity[P]>
  }




  export type BusinessEntityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BusinessEntityWhereInput
    orderBy?: BusinessEntityOrderByWithAggregationInput | BusinessEntityOrderByWithAggregationInput[]
    by: BusinessEntityScalarFieldEnum[] | BusinessEntityScalarFieldEnum
    having?: BusinessEntityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BusinessEntityCountAggregateInputType | true
    _min?: BusinessEntityMinAggregateInputType
    _max?: BusinessEntityMaxAggregateInputType
  }

  export type BusinessEntityGroupByOutputType = {
    id: string
    name: string
    description: string | null
    domain: string | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: BusinessEntityCountAggregateOutputType | null
    _min: BusinessEntityMinAggregateOutputType | null
    _max: BusinessEntityMaxAggregateOutputType | null
  }

  type GetBusinessEntityGroupByPayload<T extends BusinessEntityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BusinessEntityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BusinessEntityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BusinessEntityGroupByOutputType[P]>
            : GetScalarType<T[P], BusinessEntityGroupByOutputType[P]>
        }
      >
    >


  export type BusinessEntitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    domain?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    users?: boolean | BusinessEntity$usersArgs<ExtArgs>
    googleAnalytics?: boolean | BusinessEntity$googleAnalyticsArgs<ExtArgs>
    n8nIntegrations?: boolean | BusinessEntity$n8nIntegrationsArgs<ExtArgs>
    _count?: boolean | BusinessEntityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["businessEntity"]>

  export type BusinessEntitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    domain?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["businessEntity"]>

  export type BusinessEntitySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    domain?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BusinessEntityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | BusinessEntity$usersArgs<ExtArgs>
    googleAnalytics?: boolean | BusinessEntity$googleAnalyticsArgs<ExtArgs>
    n8nIntegrations?: boolean | BusinessEntity$n8nIntegrationsArgs<ExtArgs>
    _count?: boolean | BusinessEntityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BusinessEntityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BusinessEntityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BusinessEntity"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
      googleAnalytics: Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>[]
      n8nIntegrations: Prisma.$N8nIntegrationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      domain: string | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["businessEntity"]>
    composites: {}
  }

  type BusinessEntityGetPayload<S extends boolean | null | undefined | BusinessEntityDefaultArgs> = $Result.GetResult<Prisma.$BusinessEntityPayload, S>

  type BusinessEntityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BusinessEntityFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BusinessEntityCountAggregateInputType | true
    }

  export interface BusinessEntityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BusinessEntity'], meta: { name: 'BusinessEntity' } }
    /**
     * Find zero or one BusinessEntity that matches the filter.
     * @param {BusinessEntityFindUniqueArgs} args - Arguments to find a BusinessEntity
     * @example
     * // Get one BusinessEntity
     * const businessEntity = await prisma.businessEntity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BusinessEntityFindUniqueArgs>(args: SelectSubset<T, BusinessEntityFindUniqueArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one BusinessEntity that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BusinessEntityFindUniqueOrThrowArgs} args - Arguments to find a BusinessEntity
     * @example
     * // Get one BusinessEntity
     * const businessEntity = await prisma.businessEntity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BusinessEntityFindUniqueOrThrowArgs>(args: SelectSubset<T, BusinessEntityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first BusinessEntity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessEntityFindFirstArgs} args - Arguments to find a BusinessEntity
     * @example
     * // Get one BusinessEntity
     * const businessEntity = await prisma.businessEntity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BusinessEntityFindFirstArgs>(args?: SelectSubset<T, BusinessEntityFindFirstArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first BusinessEntity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessEntityFindFirstOrThrowArgs} args - Arguments to find a BusinessEntity
     * @example
     * // Get one BusinessEntity
     * const businessEntity = await prisma.businessEntity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BusinessEntityFindFirstOrThrowArgs>(args?: SelectSubset<T, BusinessEntityFindFirstOrThrowArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more BusinessEntities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessEntityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BusinessEntities
     * const businessEntities = await prisma.businessEntity.findMany()
     * 
     * // Get first 10 BusinessEntities
     * const businessEntities = await prisma.businessEntity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const businessEntityWithIdOnly = await prisma.businessEntity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BusinessEntityFindManyArgs>(args?: SelectSubset<T, BusinessEntityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a BusinessEntity.
     * @param {BusinessEntityCreateArgs} args - Arguments to create a BusinessEntity.
     * @example
     * // Create one BusinessEntity
     * const BusinessEntity = await prisma.businessEntity.create({
     *   data: {
     *     // ... data to create a BusinessEntity
     *   }
     * })
     * 
     */
    create<T extends BusinessEntityCreateArgs>(args: SelectSubset<T, BusinessEntityCreateArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many BusinessEntities.
     * @param {BusinessEntityCreateManyArgs} args - Arguments to create many BusinessEntities.
     * @example
     * // Create many BusinessEntities
     * const businessEntity = await prisma.businessEntity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BusinessEntityCreateManyArgs>(args?: SelectSubset<T, BusinessEntityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BusinessEntities and returns the data saved in the database.
     * @param {BusinessEntityCreateManyAndReturnArgs} args - Arguments to create many BusinessEntities.
     * @example
     * // Create many BusinessEntities
     * const businessEntity = await prisma.businessEntity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BusinessEntities and only return the `id`
     * const businessEntityWithIdOnly = await prisma.businessEntity.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BusinessEntityCreateManyAndReturnArgs>(args?: SelectSubset<T, BusinessEntityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a BusinessEntity.
     * @param {BusinessEntityDeleteArgs} args - Arguments to delete one BusinessEntity.
     * @example
     * // Delete one BusinessEntity
     * const BusinessEntity = await prisma.businessEntity.delete({
     *   where: {
     *     // ... filter to delete one BusinessEntity
     *   }
     * })
     * 
     */
    delete<T extends BusinessEntityDeleteArgs>(args: SelectSubset<T, BusinessEntityDeleteArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one BusinessEntity.
     * @param {BusinessEntityUpdateArgs} args - Arguments to update one BusinessEntity.
     * @example
     * // Update one BusinessEntity
     * const businessEntity = await prisma.businessEntity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BusinessEntityUpdateArgs>(args: SelectSubset<T, BusinessEntityUpdateArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more BusinessEntities.
     * @param {BusinessEntityDeleteManyArgs} args - Arguments to filter BusinessEntities to delete.
     * @example
     * // Delete a few BusinessEntities
     * const { count } = await prisma.businessEntity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BusinessEntityDeleteManyArgs>(args?: SelectSubset<T, BusinessEntityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BusinessEntities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessEntityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BusinessEntities
     * const businessEntity = await prisma.businessEntity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BusinessEntityUpdateManyArgs>(args: SelectSubset<T, BusinessEntityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BusinessEntity.
     * @param {BusinessEntityUpsertArgs} args - Arguments to update or create a BusinessEntity.
     * @example
     * // Update or create a BusinessEntity
     * const businessEntity = await prisma.businessEntity.upsert({
     *   create: {
     *     // ... data to create a BusinessEntity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BusinessEntity we want to update
     *   }
     * })
     */
    upsert<T extends BusinessEntityUpsertArgs>(args: SelectSubset<T, BusinessEntityUpsertArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of BusinessEntities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessEntityCountArgs} args - Arguments to filter BusinessEntities to count.
     * @example
     * // Count the number of BusinessEntities
     * const count = await prisma.businessEntity.count({
     *   where: {
     *     // ... the filter for the BusinessEntities we want to count
     *   }
     * })
    **/
    count<T extends BusinessEntityCountArgs>(
      args?: Subset<T, BusinessEntityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BusinessEntityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BusinessEntity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessEntityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BusinessEntityAggregateArgs>(args: Subset<T, BusinessEntityAggregateArgs>): Prisma.PrismaPromise<GetBusinessEntityAggregateType<T>>

    /**
     * Group by BusinessEntity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BusinessEntityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BusinessEntityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BusinessEntityGroupByArgs['orderBy'] }
        : { orderBy?: BusinessEntityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BusinessEntityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBusinessEntityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BusinessEntity model
   */
  readonly fields: BusinessEntityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BusinessEntity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BusinessEntityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends BusinessEntity$usersArgs<ExtArgs> = {}>(args?: Subset<T, BusinessEntity$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    googleAnalytics<T extends BusinessEntity$googleAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, BusinessEntity$googleAnalyticsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "findMany"> | Null>
    n8nIntegrations<T extends BusinessEntity$n8nIntegrationsArgs<ExtArgs> = {}>(args?: Subset<T, BusinessEntity$n8nIntegrationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BusinessEntity model
   */ 
  interface BusinessEntityFieldRefs {
    readonly id: FieldRef<"BusinessEntity", 'String'>
    readonly name: FieldRef<"BusinessEntity", 'String'>
    readonly description: FieldRef<"BusinessEntity", 'String'>
    readonly domain: FieldRef<"BusinessEntity", 'String'>
    readonly isActive: FieldRef<"BusinessEntity", 'Boolean'>
    readonly createdAt: FieldRef<"BusinessEntity", 'DateTime'>
    readonly updatedAt: FieldRef<"BusinessEntity", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BusinessEntity findUnique
   */
  export type BusinessEntityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessEntityInclude<ExtArgs> | null
    /**
     * Filter, which BusinessEntity to fetch.
     */
    where: BusinessEntityWhereUniqueInput
  }

  /**
   * BusinessEntity findUniqueOrThrow
   */
  export type BusinessEntityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessEntityInclude<ExtArgs> | null
    /**
     * Filter, which BusinessEntity to fetch.
     */
    where: BusinessEntityWhereUniqueInput
  }

  /**
   * BusinessEntity findFirst
   */
  export type BusinessEntityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessEntityInclude<ExtArgs> | null
    /**
     * Filter, which BusinessEntity to fetch.
     */
    where?: BusinessEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessEntities to fetch.
     */
    orderBy?: BusinessEntityOrderByWithRelationInput | BusinessEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessEntities.
     */
    cursor?: BusinessEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessEntities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessEntities.
     */
    distinct?: BusinessEntityScalarFieldEnum | BusinessEntityScalarFieldEnum[]
  }

  /**
   * BusinessEntity findFirstOrThrow
   */
  export type BusinessEntityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessEntityInclude<ExtArgs> | null
    /**
     * Filter, which BusinessEntity to fetch.
     */
    where?: BusinessEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessEntities to fetch.
     */
    orderBy?: BusinessEntityOrderByWithRelationInput | BusinessEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BusinessEntities.
     */
    cursor?: BusinessEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessEntities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BusinessEntities.
     */
    distinct?: BusinessEntityScalarFieldEnum | BusinessEntityScalarFieldEnum[]
  }

  /**
   * BusinessEntity findMany
   */
  export type BusinessEntityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessEntityInclude<ExtArgs> | null
    /**
     * Filter, which BusinessEntities to fetch.
     */
    where?: BusinessEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BusinessEntities to fetch.
     */
    orderBy?: BusinessEntityOrderByWithRelationInput | BusinessEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BusinessEntities.
     */
    cursor?: BusinessEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BusinessEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BusinessEntities.
     */
    skip?: number
    distinct?: BusinessEntityScalarFieldEnum | BusinessEntityScalarFieldEnum[]
  }

  /**
   * BusinessEntity create
   */
  export type BusinessEntityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessEntityInclude<ExtArgs> | null
    /**
     * The data needed to create a BusinessEntity.
     */
    data: XOR<BusinessEntityCreateInput, BusinessEntityUncheckedCreateInput>
  }

  /**
   * BusinessEntity createMany
   */
  export type BusinessEntityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BusinessEntities.
     */
    data: BusinessEntityCreateManyInput | BusinessEntityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessEntity createManyAndReturn
   */
  export type BusinessEntityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many BusinessEntities.
     */
    data: BusinessEntityCreateManyInput | BusinessEntityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BusinessEntity update
   */
  export type BusinessEntityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessEntityInclude<ExtArgs> | null
    /**
     * The data needed to update a BusinessEntity.
     */
    data: XOR<BusinessEntityUpdateInput, BusinessEntityUncheckedUpdateInput>
    /**
     * Choose, which BusinessEntity to update.
     */
    where: BusinessEntityWhereUniqueInput
  }

  /**
   * BusinessEntity updateMany
   */
  export type BusinessEntityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BusinessEntities.
     */
    data: XOR<BusinessEntityUpdateManyMutationInput, BusinessEntityUncheckedUpdateManyInput>
    /**
     * Filter which BusinessEntities to update
     */
    where?: BusinessEntityWhereInput
  }

  /**
   * BusinessEntity upsert
   */
  export type BusinessEntityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessEntityInclude<ExtArgs> | null
    /**
     * The filter to search for the BusinessEntity to update in case it exists.
     */
    where: BusinessEntityWhereUniqueInput
    /**
     * In case the BusinessEntity found by the `where` argument doesn't exist, create a new BusinessEntity with this data.
     */
    create: XOR<BusinessEntityCreateInput, BusinessEntityUncheckedCreateInput>
    /**
     * In case the BusinessEntity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BusinessEntityUpdateInput, BusinessEntityUncheckedUpdateInput>
  }

  /**
   * BusinessEntity delete
   */
  export type BusinessEntityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessEntityInclude<ExtArgs> | null
    /**
     * Filter which BusinessEntity to delete.
     */
    where: BusinessEntityWhereUniqueInput
  }

  /**
   * BusinessEntity deleteMany
   */
  export type BusinessEntityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BusinessEntities to delete
     */
    where?: BusinessEntityWhereInput
  }

  /**
   * BusinessEntity.users
   */
  export type BusinessEntity$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * BusinessEntity.googleAnalytics
   */
  export type BusinessEntity$googleAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
    where?: GoogleAnalyticsIntegrationWhereInput
    orderBy?: GoogleAnalyticsIntegrationOrderByWithRelationInput | GoogleAnalyticsIntegrationOrderByWithRelationInput[]
    cursor?: GoogleAnalyticsIntegrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GoogleAnalyticsIntegrationScalarFieldEnum | GoogleAnalyticsIntegrationScalarFieldEnum[]
  }

  /**
   * BusinessEntity.n8nIntegrations
   */
  export type BusinessEntity$n8nIntegrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
    where?: N8nIntegrationWhereInput
    orderBy?: N8nIntegrationOrderByWithRelationInput | N8nIntegrationOrderByWithRelationInput[]
    cursor?: N8nIntegrationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: N8nIntegrationScalarFieldEnum | N8nIntegrationScalarFieldEnum[]
  }

  /**
   * BusinessEntity without action
   */
  export type BusinessEntityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BusinessEntity
     */
    select?: BusinessEntitySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BusinessEntityInclude<ExtArgs> | null
  }


  /**
   * Model GoogleAnalyticsIntegration
   */

  export type AggregateGoogleAnalyticsIntegration = {
    _count: GoogleAnalyticsIntegrationCountAggregateOutputType | null
    _min: GoogleAnalyticsIntegrationMinAggregateOutputType | null
    _max: GoogleAnalyticsIntegrationMaxAggregateOutputType | null
  }

  export type GoogleAnalyticsIntegrationMinAggregateOutputType = {
    id: string | null
    businessEntityId: string | null
    propertyId: string | null
    clientId: string | null
    clientSecret: string | null
    refreshToken: string | null
    accessToken: string | null
    accessTokenExpiresAt: Date | null
    isActive: boolean | null
    lastSyncAt: Date | null
    syncFrequency: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GoogleAnalyticsIntegrationMaxAggregateOutputType = {
    id: string | null
    businessEntityId: string | null
    propertyId: string | null
    clientId: string | null
    clientSecret: string | null
    refreshToken: string | null
    accessToken: string | null
    accessTokenExpiresAt: Date | null
    isActive: boolean | null
    lastSyncAt: Date | null
    syncFrequency: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type GoogleAnalyticsIntegrationCountAggregateOutputType = {
    id: number
    businessEntityId: number
    propertyId: number
    clientId: number
    clientSecret: number
    refreshToken: number
    accessToken: number
    accessTokenExpiresAt: number
    isActive: number
    lastSyncAt: number
    syncFrequency: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type GoogleAnalyticsIntegrationMinAggregateInputType = {
    id?: true
    businessEntityId?: true
    propertyId?: true
    clientId?: true
    clientSecret?: true
    refreshToken?: true
    accessToken?: true
    accessTokenExpiresAt?: true
    isActive?: true
    lastSyncAt?: true
    syncFrequency?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GoogleAnalyticsIntegrationMaxAggregateInputType = {
    id?: true
    businessEntityId?: true
    propertyId?: true
    clientId?: true
    clientSecret?: true
    refreshToken?: true
    accessToken?: true
    accessTokenExpiresAt?: true
    isActive?: true
    lastSyncAt?: true
    syncFrequency?: true
    createdAt?: true
    updatedAt?: true
  }

  export type GoogleAnalyticsIntegrationCountAggregateInputType = {
    id?: true
    businessEntityId?: true
    propertyId?: true
    clientId?: true
    clientSecret?: true
    refreshToken?: true
    accessToken?: true
    accessTokenExpiresAt?: true
    isActive?: true
    lastSyncAt?: true
    syncFrequency?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type GoogleAnalyticsIntegrationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GoogleAnalyticsIntegration to aggregate.
     */
    where?: GoogleAnalyticsIntegrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoogleAnalyticsIntegrations to fetch.
     */
    orderBy?: GoogleAnalyticsIntegrationOrderByWithRelationInput | GoogleAnalyticsIntegrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GoogleAnalyticsIntegrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoogleAnalyticsIntegrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoogleAnalyticsIntegrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned GoogleAnalyticsIntegrations
    **/
    _count?: true | GoogleAnalyticsIntegrationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GoogleAnalyticsIntegrationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GoogleAnalyticsIntegrationMaxAggregateInputType
  }

  export type GetGoogleAnalyticsIntegrationAggregateType<T extends GoogleAnalyticsIntegrationAggregateArgs> = {
        [P in keyof T & keyof AggregateGoogleAnalyticsIntegration]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGoogleAnalyticsIntegration[P]>
      : GetScalarType<T[P], AggregateGoogleAnalyticsIntegration[P]>
  }




  export type GoogleAnalyticsIntegrationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GoogleAnalyticsIntegrationWhereInput
    orderBy?: GoogleAnalyticsIntegrationOrderByWithAggregationInput | GoogleAnalyticsIntegrationOrderByWithAggregationInput[]
    by: GoogleAnalyticsIntegrationScalarFieldEnum[] | GoogleAnalyticsIntegrationScalarFieldEnum
    having?: GoogleAnalyticsIntegrationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GoogleAnalyticsIntegrationCountAggregateInputType | true
    _min?: GoogleAnalyticsIntegrationMinAggregateInputType
    _max?: GoogleAnalyticsIntegrationMaxAggregateInputType
  }

  export type GoogleAnalyticsIntegrationGroupByOutputType = {
    id: string
    businessEntityId: string
    propertyId: string
    clientId: string
    clientSecret: string
    refreshToken: string | null
    accessToken: string | null
    accessTokenExpiresAt: Date | null
    isActive: boolean
    lastSyncAt: Date | null
    syncFrequency: string
    createdAt: Date
    updatedAt: Date
    _count: GoogleAnalyticsIntegrationCountAggregateOutputType | null
    _min: GoogleAnalyticsIntegrationMinAggregateOutputType | null
    _max: GoogleAnalyticsIntegrationMaxAggregateOutputType | null
  }

  type GetGoogleAnalyticsIntegrationGroupByPayload<T extends GoogleAnalyticsIntegrationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GoogleAnalyticsIntegrationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GoogleAnalyticsIntegrationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GoogleAnalyticsIntegrationGroupByOutputType[P]>
            : GetScalarType<T[P], GoogleAnalyticsIntegrationGroupByOutputType[P]>
        }
      >
    >


  export type GoogleAnalyticsIntegrationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    businessEntityId?: boolean
    propertyId?: boolean
    clientId?: boolean
    clientSecret?: boolean
    refreshToken?: boolean
    accessToken?: boolean
    accessTokenExpiresAt?: boolean
    isActive?: boolean
    lastSyncAt?: boolean
    syncFrequency?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["googleAnalyticsIntegration"]>

  export type GoogleAnalyticsIntegrationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    businessEntityId?: boolean
    propertyId?: boolean
    clientId?: boolean
    clientSecret?: boolean
    refreshToken?: boolean
    accessToken?: boolean
    accessTokenExpiresAt?: boolean
    isActive?: boolean
    lastSyncAt?: boolean
    syncFrequency?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["googleAnalyticsIntegration"]>

  export type GoogleAnalyticsIntegrationSelectScalar = {
    id?: boolean
    businessEntityId?: boolean
    propertyId?: boolean
    clientId?: boolean
    clientSecret?: boolean
    refreshToken?: boolean
    accessToken?: boolean
    accessTokenExpiresAt?: boolean
    isActive?: boolean
    lastSyncAt?: boolean
    syncFrequency?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type GoogleAnalyticsIntegrationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
  }
  export type GoogleAnalyticsIntegrationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
  }

  export type $GoogleAnalyticsIntegrationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "GoogleAnalyticsIntegration"
    objects: {
      businessEntity: Prisma.$BusinessEntityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      businessEntityId: string
      propertyId: string
      clientId: string
      clientSecret: string
      refreshToken: string | null
      accessToken: string | null
      accessTokenExpiresAt: Date | null
      isActive: boolean
      lastSyncAt: Date | null
      syncFrequency: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["googleAnalyticsIntegration"]>
    composites: {}
  }

  type GoogleAnalyticsIntegrationGetPayload<S extends boolean | null | undefined | GoogleAnalyticsIntegrationDefaultArgs> = $Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload, S>

  type GoogleAnalyticsIntegrationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<GoogleAnalyticsIntegrationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: GoogleAnalyticsIntegrationCountAggregateInputType | true
    }

  export interface GoogleAnalyticsIntegrationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['GoogleAnalyticsIntegration'], meta: { name: 'GoogleAnalyticsIntegration' } }
    /**
     * Find zero or one GoogleAnalyticsIntegration that matches the filter.
     * @param {GoogleAnalyticsIntegrationFindUniqueArgs} args - Arguments to find a GoogleAnalyticsIntegration
     * @example
     * // Get one GoogleAnalyticsIntegration
     * const googleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GoogleAnalyticsIntegrationFindUniqueArgs>(args: SelectSubset<T, GoogleAnalyticsIntegrationFindUniqueArgs<ExtArgs>>): Prisma__GoogleAnalyticsIntegrationClient<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one GoogleAnalyticsIntegration that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {GoogleAnalyticsIntegrationFindUniqueOrThrowArgs} args - Arguments to find a GoogleAnalyticsIntegration
     * @example
     * // Get one GoogleAnalyticsIntegration
     * const googleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GoogleAnalyticsIntegrationFindUniqueOrThrowArgs>(args: SelectSubset<T, GoogleAnalyticsIntegrationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GoogleAnalyticsIntegrationClient<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first GoogleAnalyticsIntegration that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoogleAnalyticsIntegrationFindFirstArgs} args - Arguments to find a GoogleAnalyticsIntegration
     * @example
     * // Get one GoogleAnalyticsIntegration
     * const googleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GoogleAnalyticsIntegrationFindFirstArgs>(args?: SelectSubset<T, GoogleAnalyticsIntegrationFindFirstArgs<ExtArgs>>): Prisma__GoogleAnalyticsIntegrationClient<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first GoogleAnalyticsIntegration that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoogleAnalyticsIntegrationFindFirstOrThrowArgs} args - Arguments to find a GoogleAnalyticsIntegration
     * @example
     * // Get one GoogleAnalyticsIntegration
     * const googleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GoogleAnalyticsIntegrationFindFirstOrThrowArgs>(args?: SelectSubset<T, GoogleAnalyticsIntegrationFindFirstOrThrowArgs<ExtArgs>>): Prisma__GoogleAnalyticsIntegrationClient<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more GoogleAnalyticsIntegrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoogleAnalyticsIntegrationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all GoogleAnalyticsIntegrations
     * const googleAnalyticsIntegrations = await prisma.googleAnalyticsIntegration.findMany()
     * 
     * // Get first 10 GoogleAnalyticsIntegrations
     * const googleAnalyticsIntegrations = await prisma.googleAnalyticsIntegration.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const googleAnalyticsIntegrationWithIdOnly = await prisma.googleAnalyticsIntegration.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GoogleAnalyticsIntegrationFindManyArgs>(args?: SelectSubset<T, GoogleAnalyticsIntegrationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a GoogleAnalyticsIntegration.
     * @param {GoogleAnalyticsIntegrationCreateArgs} args - Arguments to create a GoogleAnalyticsIntegration.
     * @example
     * // Create one GoogleAnalyticsIntegration
     * const GoogleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.create({
     *   data: {
     *     // ... data to create a GoogleAnalyticsIntegration
     *   }
     * })
     * 
     */
    create<T extends GoogleAnalyticsIntegrationCreateArgs>(args: SelectSubset<T, GoogleAnalyticsIntegrationCreateArgs<ExtArgs>>): Prisma__GoogleAnalyticsIntegrationClient<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many GoogleAnalyticsIntegrations.
     * @param {GoogleAnalyticsIntegrationCreateManyArgs} args - Arguments to create many GoogleAnalyticsIntegrations.
     * @example
     * // Create many GoogleAnalyticsIntegrations
     * const googleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GoogleAnalyticsIntegrationCreateManyArgs>(args?: SelectSubset<T, GoogleAnalyticsIntegrationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many GoogleAnalyticsIntegrations and returns the data saved in the database.
     * @param {GoogleAnalyticsIntegrationCreateManyAndReturnArgs} args - Arguments to create many GoogleAnalyticsIntegrations.
     * @example
     * // Create many GoogleAnalyticsIntegrations
     * const googleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many GoogleAnalyticsIntegrations and only return the `id`
     * const googleAnalyticsIntegrationWithIdOnly = await prisma.googleAnalyticsIntegration.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends GoogleAnalyticsIntegrationCreateManyAndReturnArgs>(args?: SelectSubset<T, GoogleAnalyticsIntegrationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a GoogleAnalyticsIntegration.
     * @param {GoogleAnalyticsIntegrationDeleteArgs} args - Arguments to delete one GoogleAnalyticsIntegration.
     * @example
     * // Delete one GoogleAnalyticsIntegration
     * const GoogleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.delete({
     *   where: {
     *     // ... filter to delete one GoogleAnalyticsIntegration
     *   }
     * })
     * 
     */
    delete<T extends GoogleAnalyticsIntegrationDeleteArgs>(args: SelectSubset<T, GoogleAnalyticsIntegrationDeleteArgs<ExtArgs>>): Prisma__GoogleAnalyticsIntegrationClient<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one GoogleAnalyticsIntegration.
     * @param {GoogleAnalyticsIntegrationUpdateArgs} args - Arguments to update one GoogleAnalyticsIntegration.
     * @example
     * // Update one GoogleAnalyticsIntegration
     * const googleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GoogleAnalyticsIntegrationUpdateArgs>(args: SelectSubset<T, GoogleAnalyticsIntegrationUpdateArgs<ExtArgs>>): Prisma__GoogleAnalyticsIntegrationClient<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more GoogleAnalyticsIntegrations.
     * @param {GoogleAnalyticsIntegrationDeleteManyArgs} args - Arguments to filter GoogleAnalyticsIntegrations to delete.
     * @example
     * // Delete a few GoogleAnalyticsIntegrations
     * const { count } = await prisma.googleAnalyticsIntegration.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GoogleAnalyticsIntegrationDeleteManyArgs>(args?: SelectSubset<T, GoogleAnalyticsIntegrationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more GoogleAnalyticsIntegrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoogleAnalyticsIntegrationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many GoogleAnalyticsIntegrations
     * const googleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GoogleAnalyticsIntegrationUpdateManyArgs>(args: SelectSubset<T, GoogleAnalyticsIntegrationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one GoogleAnalyticsIntegration.
     * @param {GoogleAnalyticsIntegrationUpsertArgs} args - Arguments to update or create a GoogleAnalyticsIntegration.
     * @example
     * // Update or create a GoogleAnalyticsIntegration
     * const googleAnalyticsIntegration = await prisma.googleAnalyticsIntegration.upsert({
     *   create: {
     *     // ... data to create a GoogleAnalyticsIntegration
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the GoogleAnalyticsIntegration we want to update
     *   }
     * })
     */
    upsert<T extends GoogleAnalyticsIntegrationUpsertArgs>(args: SelectSubset<T, GoogleAnalyticsIntegrationUpsertArgs<ExtArgs>>): Prisma__GoogleAnalyticsIntegrationClient<$Result.GetResult<Prisma.$GoogleAnalyticsIntegrationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of GoogleAnalyticsIntegrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoogleAnalyticsIntegrationCountArgs} args - Arguments to filter GoogleAnalyticsIntegrations to count.
     * @example
     * // Count the number of GoogleAnalyticsIntegrations
     * const count = await prisma.googleAnalyticsIntegration.count({
     *   where: {
     *     // ... the filter for the GoogleAnalyticsIntegrations we want to count
     *   }
     * })
    **/
    count<T extends GoogleAnalyticsIntegrationCountArgs>(
      args?: Subset<T, GoogleAnalyticsIntegrationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GoogleAnalyticsIntegrationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a GoogleAnalyticsIntegration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoogleAnalyticsIntegrationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GoogleAnalyticsIntegrationAggregateArgs>(args: Subset<T, GoogleAnalyticsIntegrationAggregateArgs>): Prisma.PrismaPromise<GetGoogleAnalyticsIntegrationAggregateType<T>>

    /**
     * Group by GoogleAnalyticsIntegration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoogleAnalyticsIntegrationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GoogleAnalyticsIntegrationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GoogleAnalyticsIntegrationGroupByArgs['orderBy'] }
        : { orderBy?: GoogleAnalyticsIntegrationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GoogleAnalyticsIntegrationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGoogleAnalyticsIntegrationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the GoogleAnalyticsIntegration model
   */
  readonly fields: GoogleAnalyticsIntegrationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for GoogleAnalyticsIntegration.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GoogleAnalyticsIntegrationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businessEntity<T extends BusinessEntityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BusinessEntityDefaultArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the GoogleAnalyticsIntegration model
   */ 
  interface GoogleAnalyticsIntegrationFieldRefs {
    readonly id: FieldRef<"GoogleAnalyticsIntegration", 'String'>
    readonly businessEntityId: FieldRef<"GoogleAnalyticsIntegration", 'String'>
    readonly propertyId: FieldRef<"GoogleAnalyticsIntegration", 'String'>
    readonly clientId: FieldRef<"GoogleAnalyticsIntegration", 'String'>
    readonly clientSecret: FieldRef<"GoogleAnalyticsIntegration", 'String'>
    readonly refreshToken: FieldRef<"GoogleAnalyticsIntegration", 'String'>
    readonly accessToken: FieldRef<"GoogleAnalyticsIntegration", 'String'>
    readonly accessTokenExpiresAt: FieldRef<"GoogleAnalyticsIntegration", 'DateTime'>
    readonly isActive: FieldRef<"GoogleAnalyticsIntegration", 'Boolean'>
    readonly lastSyncAt: FieldRef<"GoogleAnalyticsIntegration", 'DateTime'>
    readonly syncFrequency: FieldRef<"GoogleAnalyticsIntegration", 'String'>
    readonly createdAt: FieldRef<"GoogleAnalyticsIntegration", 'DateTime'>
    readonly updatedAt: FieldRef<"GoogleAnalyticsIntegration", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * GoogleAnalyticsIntegration findUnique
   */
  export type GoogleAnalyticsIntegrationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
    /**
     * Filter, which GoogleAnalyticsIntegration to fetch.
     */
    where: GoogleAnalyticsIntegrationWhereUniqueInput
  }

  /**
   * GoogleAnalyticsIntegration findUniqueOrThrow
   */
  export type GoogleAnalyticsIntegrationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
    /**
     * Filter, which GoogleAnalyticsIntegration to fetch.
     */
    where: GoogleAnalyticsIntegrationWhereUniqueInput
  }

  /**
   * GoogleAnalyticsIntegration findFirst
   */
  export type GoogleAnalyticsIntegrationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
    /**
     * Filter, which GoogleAnalyticsIntegration to fetch.
     */
    where?: GoogleAnalyticsIntegrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoogleAnalyticsIntegrations to fetch.
     */
    orderBy?: GoogleAnalyticsIntegrationOrderByWithRelationInput | GoogleAnalyticsIntegrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GoogleAnalyticsIntegrations.
     */
    cursor?: GoogleAnalyticsIntegrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoogleAnalyticsIntegrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoogleAnalyticsIntegrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GoogleAnalyticsIntegrations.
     */
    distinct?: GoogleAnalyticsIntegrationScalarFieldEnum | GoogleAnalyticsIntegrationScalarFieldEnum[]
  }

  /**
   * GoogleAnalyticsIntegration findFirstOrThrow
   */
  export type GoogleAnalyticsIntegrationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
    /**
     * Filter, which GoogleAnalyticsIntegration to fetch.
     */
    where?: GoogleAnalyticsIntegrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoogleAnalyticsIntegrations to fetch.
     */
    orderBy?: GoogleAnalyticsIntegrationOrderByWithRelationInput | GoogleAnalyticsIntegrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for GoogleAnalyticsIntegrations.
     */
    cursor?: GoogleAnalyticsIntegrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoogleAnalyticsIntegrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoogleAnalyticsIntegrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of GoogleAnalyticsIntegrations.
     */
    distinct?: GoogleAnalyticsIntegrationScalarFieldEnum | GoogleAnalyticsIntegrationScalarFieldEnum[]
  }

  /**
   * GoogleAnalyticsIntegration findMany
   */
  export type GoogleAnalyticsIntegrationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
    /**
     * Filter, which GoogleAnalyticsIntegrations to fetch.
     */
    where?: GoogleAnalyticsIntegrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of GoogleAnalyticsIntegrations to fetch.
     */
    orderBy?: GoogleAnalyticsIntegrationOrderByWithRelationInput | GoogleAnalyticsIntegrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing GoogleAnalyticsIntegrations.
     */
    cursor?: GoogleAnalyticsIntegrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` GoogleAnalyticsIntegrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` GoogleAnalyticsIntegrations.
     */
    skip?: number
    distinct?: GoogleAnalyticsIntegrationScalarFieldEnum | GoogleAnalyticsIntegrationScalarFieldEnum[]
  }

  /**
   * GoogleAnalyticsIntegration create
   */
  export type GoogleAnalyticsIntegrationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
    /**
     * The data needed to create a GoogleAnalyticsIntegration.
     */
    data: XOR<GoogleAnalyticsIntegrationCreateInput, GoogleAnalyticsIntegrationUncheckedCreateInput>
  }

  /**
   * GoogleAnalyticsIntegration createMany
   */
  export type GoogleAnalyticsIntegrationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many GoogleAnalyticsIntegrations.
     */
    data: GoogleAnalyticsIntegrationCreateManyInput | GoogleAnalyticsIntegrationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * GoogleAnalyticsIntegration createManyAndReturn
   */
  export type GoogleAnalyticsIntegrationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many GoogleAnalyticsIntegrations.
     */
    data: GoogleAnalyticsIntegrationCreateManyInput | GoogleAnalyticsIntegrationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * GoogleAnalyticsIntegration update
   */
  export type GoogleAnalyticsIntegrationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
    /**
     * The data needed to update a GoogleAnalyticsIntegration.
     */
    data: XOR<GoogleAnalyticsIntegrationUpdateInput, GoogleAnalyticsIntegrationUncheckedUpdateInput>
    /**
     * Choose, which GoogleAnalyticsIntegration to update.
     */
    where: GoogleAnalyticsIntegrationWhereUniqueInput
  }

  /**
   * GoogleAnalyticsIntegration updateMany
   */
  export type GoogleAnalyticsIntegrationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update GoogleAnalyticsIntegrations.
     */
    data: XOR<GoogleAnalyticsIntegrationUpdateManyMutationInput, GoogleAnalyticsIntegrationUncheckedUpdateManyInput>
    /**
     * Filter which GoogleAnalyticsIntegrations to update
     */
    where?: GoogleAnalyticsIntegrationWhereInput
  }

  /**
   * GoogleAnalyticsIntegration upsert
   */
  export type GoogleAnalyticsIntegrationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
    /**
     * The filter to search for the GoogleAnalyticsIntegration to update in case it exists.
     */
    where: GoogleAnalyticsIntegrationWhereUniqueInput
    /**
     * In case the GoogleAnalyticsIntegration found by the `where` argument doesn't exist, create a new GoogleAnalyticsIntegration with this data.
     */
    create: XOR<GoogleAnalyticsIntegrationCreateInput, GoogleAnalyticsIntegrationUncheckedCreateInput>
    /**
     * In case the GoogleAnalyticsIntegration was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GoogleAnalyticsIntegrationUpdateInput, GoogleAnalyticsIntegrationUncheckedUpdateInput>
  }

  /**
   * GoogleAnalyticsIntegration delete
   */
  export type GoogleAnalyticsIntegrationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
    /**
     * Filter which GoogleAnalyticsIntegration to delete.
     */
    where: GoogleAnalyticsIntegrationWhereUniqueInput
  }

  /**
   * GoogleAnalyticsIntegration deleteMany
   */
  export type GoogleAnalyticsIntegrationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which GoogleAnalyticsIntegrations to delete
     */
    where?: GoogleAnalyticsIntegrationWhereInput
  }

  /**
   * GoogleAnalyticsIntegration without action
   */
  export type GoogleAnalyticsIntegrationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GoogleAnalyticsIntegration
     */
    select?: GoogleAnalyticsIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GoogleAnalyticsIntegrationInclude<ExtArgs> | null
  }


  /**
   * Model N8nIntegration
   */

  export type AggregateN8nIntegration = {
    _count: N8nIntegrationCountAggregateOutputType | null
    _avg: N8nIntegrationAvgAggregateOutputType | null
    _sum: N8nIntegrationSumAggregateOutputType | null
    _min: N8nIntegrationMinAggregateOutputType | null
    _max: N8nIntegrationMaxAggregateOutputType | null
  }

  export type N8nIntegrationAvgAggregateOutputType = {
    webhookCount: number | null
  }

  export type N8nIntegrationSumAggregateOutputType = {
    webhookCount: number | null
  }

  export type N8nIntegrationMinAggregateOutputType = {
    id: string | null
    businessEntityId: string | null
    webhookUrl: string | null
    webhookToken: string | null
    isActive: boolean | null
    lastWebhookAt: Date | null
    webhookCount: number | null
    lastErrorAt: Date | null
    errorMessage: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type N8nIntegrationMaxAggregateOutputType = {
    id: string | null
    businessEntityId: string | null
    webhookUrl: string | null
    webhookToken: string | null
    isActive: boolean | null
    lastWebhookAt: Date | null
    webhookCount: number | null
    lastErrorAt: Date | null
    errorMessage: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type N8nIntegrationCountAggregateOutputType = {
    id: number
    businessEntityId: number
    webhookUrl: number
    webhookToken: number
    isActive: number
    lastWebhookAt: number
    webhookCount: number
    lastErrorAt: number
    errorMessage: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type N8nIntegrationAvgAggregateInputType = {
    webhookCount?: true
  }

  export type N8nIntegrationSumAggregateInputType = {
    webhookCount?: true
  }

  export type N8nIntegrationMinAggregateInputType = {
    id?: true
    businessEntityId?: true
    webhookUrl?: true
    webhookToken?: true
    isActive?: true
    lastWebhookAt?: true
    webhookCount?: true
    lastErrorAt?: true
    errorMessage?: true
    createdAt?: true
    updatedAt?: true
  }

  export type N8nIntegrationMaxAggregateInputType = {
    id?: true
    businessEntityId?: true
    webhookUrl?: true
    webhookToken?: true
    isActive?: true
    lastWebhookAt?: true
    webhookCount?: true
    lastErrorAt?: true
    errorMessage?: true
    createdAt?: true
    updatedAt?: true
  }

  export type N8nIntegrationCountAggregateInputType = {
    id?: true
    businessEntityId?: true
    webhookUrl?: true
    webhookToken?: true
    isActive?: true
    lastWebhookAt?: true
    webhookCount?: true
    lastErrorAt?: true
    errorMessage?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type N8nIntegrationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which N8nIntegration to aggregate.
     */
    where?: N8nIntegrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of N8nIntegrations to fetch.
     */
    orderBy?: N8nIntegrationOrderByWithRelationInput | N8nIntegrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: N8nIntegrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` N8nIntegrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` N8nIntegrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned N8nIntegrations
    **/
    _count?: true | N8nIntegrationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: N8nIntegrationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: N8nIntegrationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: N8nIntegrationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: N8nIntegrationMaxAggregateInputType
  }

  export type GetN8nIntegrationAggregateType<T extends N8nIntegrationAggregateArgs> = {
        [P in keyof T & keyof AggregateN8nIntegration]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateN8nIntegration[P]>
      : GetScalarType<T[P], AggregateN8nIntegration[P]>
  }




  export type N8nIntegrationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: N8nIntegrationWhereInput
    orderBy?: N8nIntegrationOrderByWithAggregationInput | N8nIntegrationOrderByWithAggregationInput[]
    by: N8nIntegrationScalarFieldEnum[] | N8nIntegrationScalarFieldEnum
    having?: N8nIntegrationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: N8nIntegrationCountAggregateInputType | true
    _avg?: N8nIntegrationAvgAggregateInputType
    _sum?: N8nIntegrationSumAggregateInputType
    _min?: N8nIntegrationMinAggregateInputType
    _max?: N8nIntegrationMaxAggregateInputType
  }

  export type N8nIntegrationGroupByOutputType = {
    id: string
    businessEntityId: string
    webhookUrl: string
    webhookToken: string
    isActive: boolean
    lastWebhookAt: Date | null
    webhookCount: number
    lastErrorAt: Date | null
    errorMessage: string | null
    createdAt: Date
    updatedAt: Date
    _count: N8nIntegrationCountAggregateOutputType | null
    _avg: N8nIntegrationAvgAggregateOutputType | null
    _sum: N8nIntegrationSumAggregateOutputType | null
    _min: N8nIntegrationMinAggregateOutputType | null
    _max: N8nIntegrationMaxAggregateOutputType | null
  }

  type GetN8nIntegrationGroupByPayload<T extends N8nIntegrationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<N8nIntegrationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof N8nIntegrationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], N8nIntegrationGroupByOutputType[P]>
            : GetScalarType<T[P], N8nIntegrationGroupByOutputType[P]>
        }
      >
    >


  export type N8nIntegrationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    businessEntityId?: boolean
    webhookUrl?: boolean
    webhookToken?: boolean
    isActive?: boolean
    lastWebhookAt?: boolean
    webhookCount?: boolean
    lastErrorAt?: boolean
    errorMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
    webhookEvents?: boolean | N8nIntegration$webhookEventsArgs<ExtArgs>
    _count?: boolean | N8nIntegrationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["n8nIntegration"]>

  export type N8nIntegrationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    businessEntityId?: boolean
    webhookUrl?: boolean
    webhookToken?: boolean
    isActive?: boolean
    lastWebhookAt?: boolean
    webhookCount?: boolean
    lastErrorAt?: boolean
    errorMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["n8nIntegration"]>

  export type N8nIntegrationSelectScalar = {
    id?: boolean
    businessEntityId?: boolean
    webhookUrl?: boolean
    webhookToken?: boolean
    isActive?: boolean
    lastWebhookAt?: boolean
    webhookCount?: boolean
    lastErrorAt?: boolean
    errorMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type N8nIntegrationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
    webhookEvents?: boolean | N8nIntegration$webhookEventsArgs<ExtArgs>
    _count?: boolean | N8nIntegrationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type N8nIntegrationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    businessEntity?: boolean | BusinessEntityDefaultArgs<ExtArgs>
  }

  export type $N8nIntegrationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "N8nIntegration"
    objects: {
      businessEntity: Prisma.$BusinessEntityPayload<ExtArgs>
      webhookEvents: Prisma.$N8nWebhookEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      businessEntityId: string
      webhookUrl: string
      webhookToken: string
      isActive: boolean
      lastWebhookAt: Date | null
      webhookCount: number
      lastErrorAt: Date | null
      errorMessage: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["n8nIntegration"]>
    composites: {}
  }

  type N8nIntegrationGetPayload<S extends boolean | null | undefined | N8nIntegrationDefaultArgs> = $Result.GetResult<Prisma.$N8nIntegrationPayload, S>

  type N8nIntegrationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<N8nIntegrationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: N8nIntegrationCountAggregateInputType | true
    }

  export interface N8nIntegrationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['N8nIntegration'], meta: { name: 'N8nIntegration' } }
    /**
     * Find zero or one N8nIntegration that matches the filter.
     * @param {N8nIntegrationFindUniqueArgs} args - Arguments to find a N8nIntegration
     * @example
     * // Get one N8nIntegration
     * const n8nIntegration = await prisma.n8nIntegration.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends N8nIntegrationFindUniqueArgs>(args: SelectSubset<T, N8nIntegrationFindUniqueArgs<ExtArgs>>): Prisma__N8nIntegrationClient<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one N8nIntegration that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {N8nIntegrationFindUniqueOrThrowArgs} args - Arguments to find a N8nIntegration
     * @example
     * // Get one N8nIntegration
     * const n8nIntegration = await prisma.n8nIntegration.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends N8nIntegrationFindUniqueOrThrowArgs>(args: SelectSubset<T, N8nIntegrationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__N8nIntegrationClient<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first N8nIntegration that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nIntegrationFindFirstArgs} args - Arguments to find a N8nIntegration
     * @example
     * // Get one N8nIntegration
     * const n8nIntegration = await prisma.n8nIntegration.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends N8nIntegrationFindFirstArgs>(args?: SelectSubset<T, N8nIntegrationFindFirstArgs<ExtArgs>>): Prisma__N8nIntegrationClient<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first N8nIntegration that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nIntegrationFindFirstOrThrowArgs} args - Arguments to find a N8nIntegration
     * @example
     * // Get one N8nIntegration
     * const n8nIntegration = await prisma.n8nIntegration.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends N8nIntegrationFindFirstOrThrowArgs>(args?: SelectSubset<T, N8nIntegrationFindFirstOrThrowArgs<ExtArgs>>): Prisma__N8nIntegrationClient<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more N8nIntegrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nIntegrationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all N8nIntegrations
     * const n8nIntegrations = await prisma.n8nIntegration.findMany()
     * 
     * // Get first 10 N8nIntegrations
     * const n8nIntegrations = await prisma.n8nIntegration.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const n8nIntegrationWithIdOnly = await prisma.n8nIntegration.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends N8nIntegrationFindManyArgs>(args?: SelectSubset<T, N8nIntegrationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a N8nIntegration.
     * @param {N8nIntegrationCreateArgs} args - Arguments to create a N8nIntegration.
     * @example
     * // Create one N8nIntegration
     * const N8nIntegration = await prisma.n8nIntegration.create({
     *   data: {
     *     // ... data to create a N8nIntegration
     *   }
     * })
     * 
     */
    create<T extends N8nIntegrationCreateArgs>(args: SelectSubset<T, N8nIntegrationCreateArgs<ExtArgs>>): Prisma__N8nIntegrationClient<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many N8nIntegrations.
     * @param {N8nIntegrationCreateManyArgs} args - Arguments to create many N8nIntegrations.
     * @example
     * // Create many N8nIntegrations
     * const n8nIntegration = await prisma.n8nIntegration.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends N8nIntegrationCreateManyArgs>(args?: SelectSubset<T, N8nIntegrationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many N8nIntegrations and returns the data saved in the database.
     * @param {N8nIntegrationCreateManyAndReturnArgs} args - Arguments to create many N8nIntegrations.
     * @example
     * // Create many N8nIntegrations
     * const n8nIntegration = await prisma.n8nIntegration.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many N8nIntegrations and only return the `id`
     * const n8nIntegrationWithIdOnly = await prisma.n8nIntegration.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends N8nIntegrationCreateManyAndReturnArgs>(args?: SelectSubset<T, N8nIntegrationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a N8nIntegration.
     * @param {N8nIntegrationDeleteArgs} args - Arguments to delete one N8nIntegration.
     * @example
     * // Delete one N8nIntegration
     * const N8nIntegration = await prisma.n8nIntegration.delete({
     *   where: {
     *     // ... filter to delete one N8nIntegration
     *   }
     * })
     * 
     */
    delete<T extends N8nIntegrationDeleteArgs>(args: SelectSubset<T, N8nIntegrationDeleteArgs<ExtArgs>>): Prisma__N8nIntegrationClient<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one N8nIntegration.
     * @param {N8nIntegrationUpdateArgs} args - Arguments to update one N8nIntegration.
     * @example
     * // Update one N8nIntegration
     * const n8nIntegration = await prisma.n8nIntegration.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends N8nIntegrationUpdateArgs>(args: SelectSubset<T, N8nIntegrationUpdateArgs<ExtArgs>>): Prisma__N8nIntegrationClient<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more N8nIntegrations.
     * @param {N8nIntegrationDeleteManyArgs} args - Arguments to filter N8nIntegrations to delete.
     * @example
     * // Delete a few N8nIntegrations
     * const { count } = await prisma.n8nIntegration.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends N8nIntegrationDeleteManyArgs>(args?: SelectSubset<T, N8nIntegrationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more N8nIntegrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nIntegrationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many N8nIntegrations
     * const n8nIntegration = await prisma.n8nIntegration.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends N8nIntegrationUpdateManyArgs>(args: SelectSubset<T, N8nIntegrationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one N8nIntegration.
     * @param {N8nIntegrationUpsertArgs} args - Arguments to update or create a N8nIntegration.
     * @example
     * // Update or create a N8nIntegration
     * const n8nIntegration = await prisma.n8nIntegration.upsert({
     *   create: {
     *     // ... data to create a N8nIntegration
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the N8nIntegration we want to update
     *   }
     * })
     */
    upsert<T extends N8nIntegrationUpsertArgs>(args: SelectSubset<T, N8nIntegrationUpsertArgs<ExtArgs>>): Prisma__N8nIntegrationClient<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of N8nIntegrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nIntegrationCountArgs} args - Arguments to filter N8nIntegrations to count.
     * @example
     * // Count the number of N8nIntegrations
     * const count = await prisma.n8nIntegration.count({
     *   where: {
     *     // ... the filter for the N8nIntegrations we want to count
     *   }
     * })
    **/
    count<T extends N8nIntegrationCountArgs>(
      args?: Subset<T, N8nIntegrationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], N8nIntegrationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a N8nIntegration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nIntegrationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends N8nIntegrationAggregateArgs>(args: Subset<T, N8nIntegrationAggregateArgs>): Prisma.PrismaPromise<GetN8nIntegrationAggregateType<T>>

    /**
     * Group by N8nIntegration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nIntegrationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends N8nIntegrationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: N8nIntegrationGroupByArgs['orderBy'] }
        : { orderBy?: N8nIntegrationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, N8nIntegrationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetN8nIntegrationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the N8nIntegration model
   */
  readonly fields: N8nIntegrationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for N8nIntegration.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__N8nIntegrationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    businessEntity<T extends BusinessEntityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BusinessEntityDefaultArgs<ExtArgs>>): Prisma__BusinessEntityClient<$Result.GetResult<Prisma.$BusinessEntityPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    webhookEvents<T extends N8nIntegration$webhookEventsArgs<ExtArgs> = {}>(args?: Subset<T, N8nIntegration$webhookEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the N8nIntegration model
   */ 
  interface N8nIntegrationFieldRefs {
    readonly id: FieldRef<"N8nIntegration", 'String'>
    readonly businessEntityId: FieldRef<"N8nIntegration", 'String'>
    readonly webhookUrl: FieldRef<"N8nIntegration", 'String'>
    readonly webhookToken: FieldRef<"N8nIntegration", 'String'>
    readonly isActive: FieldRef<"N8nIntegration", 'Boolean'>
    readonly lastWebhookAt: FieldRef<"N8nIntegration", 'DateTime'>
    readonly webhookCount: FieldRef<"N8nIntegration", 'Int'>
    readonly lastErrorAt: FieldRef<"N8nIntegration", 'DateTime'>
    readonly errorMessage: FieldRef<"N8nIntegration", 'String'>
    readonly createdAt: FieldRef<"N8nIntegration", 'DateTime'>
    readonly updatedAt: FieldRef<"N8nIntegration", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * N8nIntegration findUnique
   */
  export type N8nIntegrationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
    /**
     * Filter, which N8nIntegration to fetch.
     */
    where: N8nIntegrationWhereUniqueInput
  }

  /**
   * N8nIntegration findUniqueOrThrow
   */
  export type N8nIntegrationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
    /**
     * Filter, which N8nIntegration to fetch.
     */
    where: N8nIntegrationWhereUniqueInput
  }

  /**
   * N8nIntegration findFirst
   */
  export type N8nIntegrationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
    /**
     * Filter, which N8nIntegration to fetch.
     */
    where?: N8nIntegrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of N8nIntegrations to fetch.
     */
    orderBy?: N8nIntegrationOrderByWithRelationInput | N8nIntegrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for N8nIntegrations.
     */
    cursor?: N8nIntegrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` N8nIntegrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` N8nIntegrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of N8nIntegrations.
     */
    distinct?: N8nIntegrationScalarFieldEnum | N8nIntegrationScalarFieldEnum[]
  }

  /**
   * N8nIntegration findFirstOrThrow
   */
  export type N8nIntegrationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
    /**
     * Filter, which N8nIntegration to fetch.
     */
    where?: N8nIntegrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of N8nIntegrations to fetch.
     */
    orderBy?: N8nIntegrationOrderByWithRelationInput | N8nIntegrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for N8nIntegrations.
     */
    cursor?: N8nIntegrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` N8nIntegrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` N8nIntegrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of N8nIntegrations.
     */
    distinct?: N8nIntegrationScalarFieldEnum | N8nIntegrationScalarFieldEnum[]
  }

  /**
   * N8nIntegration findMany
   */
  export type N8nIntegrationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
    /**
     * Filter, which N8nIntegrations to fetch.
     */
    where?: N8nIntegrationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of N8nIntegrations to fetch.
     */
    orderBy?: N8nIntegrationOrderByWithRelationInput | N8nIntegrationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing N8nIntegrations.
     */
    cursor?: N8nIntegrationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` N8nIntegrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` N8nIntegrations.
     */
    skip?: number
    distinct?: N8nIntegrationScalarFieldEnum | N8nIntegrationScalarFieldEnum[]
  }

  /**
   * N8nIntegration create
   */
  export type N8nIntegrationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
    /**
     * The data needed to create a N8nIntegration.
     */
    data: XOR<N8nIntegrationCreateInput, N8nIntegrationUncheckedCreateInput>
  }

  /**
   * N8nIntegration createMany
   */
  export type N8nIntegrationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many N8nIntegrations.
     */
    data: N8nIntegrationCreateManyInput | N8nIntegrationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * N8nIntegration createManyAndReturn
   */
  export type N8nIntegrationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many N8nIntegrations.
     */
    data: N8nIntegrationCreateManyInput | N8nIntegrationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * N8nIntegration update
   */
  export type N8nIntegrationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
    /**
     * The data needed to update a N8nIntegration.
     */
    data: XOR<N8nIntegrationUpdateInput, N8nIntegrationUncheckedUpdateInput>
    /**
     * Choose, which N8nIntegration to update.
     */
    where: N8nIntegrationWhereUniqueInput
  }

  /**
   * N8nIntegration updateMany
   */
  export type N8nIntegrationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update N8nIntegrations.
     */
    data: XOR<N8nIntegrationUpdateManyMutationInput, N8nIntegrationUncheckedUpdateManyInput>
    /**
     * Filter which N8nIntegrations to update
     */
    where?: N8nIntegrationWhereInput
  }

  /**
   * N8nIntegration upsert
   */
  export type N8nIntegrationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
    /**
     * The filter to search for the N8nIntegration to update in case it exists.
     */
    where: N8nIntegrationWhereUniqueInput
    /**
     * In case the N8nIntegration found by the `where` argument doesn't exist, create a new N8nIntegration with this data.
     */
    create: XOR<N8nIntegrationCreateInput, N8nIntegrationUncheckedCreateInput>
    /**
     * In case the N8nIntegration was found with the provided `where` argument, update it with this data.
     */
    update: XOR<N8nIntegrationUpdateInput, N8nIntegrationUncheckedUpdateInput>
  }

  /**
   * N8nIntegration delete
   */
  export type N8nIntegrationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
    /**
     * Filter which N8nIntegration to delete.
     */
    where: N8nIntegrationWhereUniqueInput
  }

  /**
   * N8nIntegration deleteMany
   */
  export type N8nIntegrationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which N8nIntegrations to delete
     */
    where?: N8nIntegrationWhereInput
  }

  /**
   * N8nIntegration.webhookEvents
   */
  export type N8nIntegration$webhookEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
    where?: N8nWebhookEventWhereInput
    orderBy?: N8nWebhookEventOrderByWithRelationInput | N8nWebhookEventOrderByWithRelationInput[]
    cursor?: N8nWebhookEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: N8nWebhookEventScalarFieldEnum | N8nWebhookEventScalarFieldEnum[]
  }

  /**
   * N8nIntegration without action
   */
  export type N8nIntegrationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nIntegration
     */
    select?: N8nIntegrationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nIntegrationInclude<ExtArgs> | null
  }


  /**
   * Model N8nWebhookEvent
   */

  export type AggregateN8nWebhookEvent = {
    _count: N8nWebhookEventCountAggregateOutputType | null
    _avg: N8nWebhookEventAvgAggregateOutputType | null
    _sum: N8nWebhookEventSumAggregateOutputType | null
    _min: N8nWebhookEventMinAggregateOutputType | null
    _max: N8nWebhookEventMaxAggregateOutputType | null
  }

  export type N8nWebhookEventAvgAggregateOutputType = {
    duration: number | null
  }

  export type N8nWebhookEventSumAggregateOutputType = {
    duration: number | null
  }

  export type N8nWebhookEventMinAggregateOutputType = {
    id: string | null
    n8nIntegrationId: string | null
    workflowId: string | null
    workflowName: string | null
    executionId: string | null
    eventType: string | null
    status: string | null
    startTime: Date | null
    endTime: Date | null
    duration: number | null
    errorMessage: string | null
    createdAt: Date | null
  }

  export type N8nWebhookEventMaxAggregateOutputType = {
    id: string | null
    n8nIntegrationId: string | null
    workflowId: string | null
    workflowName: string | null
    executionId: string | null
    eventType: string | null
    status: string | null
    startTime: Date | null
    endTime: Date | null
    duration: number | null
    errorMessage: string | null
    createdAt: Date | null
  }

  export type N8nWebhookEventCountAggregateOutputType = {
    id: number
    n8nIntegrationId: number
    workflowId: number
    workflowName: number
    executionId: number
    eventType: number
    status: number
    startTime: number
    endTime: number
    duration: number
    inputData: number
    outputData: number
    errorMessage: number
    metadata: number
    createdAt: number
    _all: number
  }


  export type N8nWebhookEventAvgAggregateInputType = {
    duration?: true
  }

  export type N8nWebhookEventSumAggregateInputType = {
    duration?: true
  }

  export type N8nWebhookEventMinAggregateInputType = {
    id?: true
    n8nIntegrationId?: true
    workflowId?: true
    workflowName?: true
    executionId?: true
    eventType?: true
    status?: true
    startTime?: true
    endTime?: true
    duration?: true
    errorMessage?: true
    createdAt?: true
  }

  export type N8nWebhookEventMaxAggregateInputType = {
    id?: true
    n8nIntegrationId?: true
    workflowId?: true
    workflowName?: true
    executionId?: true
    eventType?: true
    status?: true
    startTime?: true
    endTime?: true
    duration?: true
    errorMessage?: true
    createdAt?: true
  }

  export type N8nWebhookEventCountAggregateInputType = {
    id?: true
    n8nIntegrationId?: true
    workflowId?: true
    workflowName?: true
    executionId?: true
    eventType?: true
    status?: true
    startTime?: true
    endTime?: true
    duration?: true
    inputData?: true
    outputData?: true
    errorMessage?: true
    metadata?: true
    createdAt?: true
    _all?: true
  }

  export type N8nWebhookEventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which N8nWebhookEvent to aggregate.
     */
    where?: N8nWebhookEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of N8nWebhookEvents to fetch.
     */
    orderBy?: N8nWebhookEventOrderByWithRelationInput | N8nWebhookEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: N8nWebhookEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` N8nWebhookEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` N8nWebhookEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned N8nWebhookEvents
    **/
    _count?: true | N8nWebhookEventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: N8nWebhookEventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: N8nWebhookEventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: N8nWebhookEventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: N8nWebhookEventMaxAggregateInputType
  }

  export type GetN8nWebhookEventAggregateType<T extends N8nWebhookEventAggregateArgs> = {
        [P in keyof T & keyof AggregateN8nWebhookEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateN8nWebhookEvent[P]>
      : GetScalarType<T[P], AggregateN8nWebhookEvent[P]>
  }




  export type N8nWebhookEventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: N8nWebhookEventWhereInput
    orderBy?: N8nWebhookEventOrderByWithAggregationInput | N8nWebhookEventOrderByWithAggregationInput[]
    by: N8nWebhookEventScalarFieldEnum[] | N8nWebhookEventScalarFieldEnum
    having?: N8nWebhookEventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: N8nWebhookEventCountAggregateInputType | true
    _avg?: N8nWebhookEventAvgAggregateInputType
    _sum?: N8nWebhookEventSumAggregateInputType
    _min?: N8nWebhookEventMinAggregateInputType
    _max?: N8nWebhookEventMaxAggregateInputType
  }

  export type N8nWebhookEventGroupByOutputType = {
    id: string
    n8nIntegrationId: string
    workflowId: string
    workflowName: string
    executionId: string
    eventType: string
    status: string
    startTime: Date
    endTime: Date | null
    duration: number | null
    inputData: JsonValue
    outputData: JsonValue
    errorMessage: string | null
    metadata: JsonValue
    createdAt: Date
    _count: N8nWebhookEventCountAggregateOutputType | null
    _avg: N8nWebhookEventAvgAggregateOutputType | null
    _sum: N8nWebhookEventSumAggregateOutputType | null
    _min: N8nWebhookEventMinAggregateOutputType | null
    _max: N8nWebhookEventMaxAggregateOutputType | null
  }

  type GetN8nWebhookEventGroupByPayload<T extends N8nWebhookEventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<N8nWebhookEventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof N8nWebhookEventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], N8nWebhookEventGroupByOutputType[P]>
            : GetScalarType<T[P], N8nWebhookEventGroupByOutputType[P]>
        }
      >
    >


  export type N8nWebhookEventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    n8nIntegrationId?: boolean
    workflowId?: boolean
    workflowName?: boolean
    executionId?: boolean
    eventType?: boolean
    status?: boolean
    startTime?: boolean
    endTime?: boolean
    duration?: boolean
    inputData?: boolean
    outputData?: boolean
    errorMessage?: boolean
    metadata?: boolean
    createdAt?: boolean
    n8nIntegration?: boolean | N8nIntegrationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["n8nWebhookEvent"]>

  export type N8nWebhookEventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    n8nIntegrationId?: boolean
    workflowId?: boolean
    workflowName?: boolean
    executionId?: boolean
    eventType?: boolean
    status?: boolean
    startTime?: boolean
    endTime?: boolean
    duration?: boolean
    inputData?: boolean
    outputData?: boolean
    errorMessage?: boolean
    metadata?: boolean
    createdAt?: boolean
    n8nIntegration?: boolean | N8nIntegrationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["n8nWebhookEvent"]>

  export type N8nWebhookEventSelectScalar = {
    id?: boolean
    n8nIntegrationId?: boolean
    workflowId?: boolean
    workflowName?: boolean
    executionId?: boolean
    eventType?: boolean
    status?: boolean
    startTime?: boolean
    endTime?: boolean
    duration?: boolean
    inputData?: boolean
    outputData?: boolean
    errorMessage?: boolean
    metadata?: boolean
    createdAt?: boolean
  }

  export type N8nWebhookEventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    n8nIntegration?: boolean | N8nIntegrationDefaultArgs<ExtArgs>
  }
  export type N8nWebhookEventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    n8nIntegration?: boolean | N8nIntegrationDefaultArgs<ExtArgs>
  }

  export type $N8nWebhookEventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "N8nWebhookEvent"
    objects: {
      n8nIntegration: Prisma.$N8nIntegrationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      n8nIntegrationId: string
      workflowId: string
      workflowName: string
      executionId: string
      eventType: string
      status: string
      startTime: Date
      endTime: Date | null
      duration: number | null
      inputData: Prisma.JsonValue
      outputData: Prisma.JsonValue
      errorMessage: string | null
      metadata: Prisma.JsonValue
      createdAt: Date
    }, ExtArgs["result"]["n8nWebhookEvent"]>
    composites: {}
  }

  type N8nWebhookEventGetPayload<S extends boolean | null | undefined | N8nWebhookEventDefaultArgs> = $Result.GetResult<Prisma.$N8nWebhookEventPayload, S>

  type N8nWebhookEventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<N8nWebhookEventFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: N8nWebhookEventCountAggregateInputType | true
    }

  export interface N8nWebhookEventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['N8nWebhookEvent'], meta: { name: 'N8nWebhookEvent' } }
    /**
     * Find zero or one N8nWebhookEvent that matches the filter.
     * @param {N8nWebhookEventFindUniqueArgs} args - Arguments to find a N8nWebhookEvent
     * @example
     * // Get one N8nWebhookEvent
     * const n8nWebhookEvent = await prisma.n8nWebhookEvent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends N8nWebhookEventFindUniqueArgs>(args: SelectSubset<T, N8nWebhookEventFindUniqueArgs<ExtArgs>>): Prisma__N8nWebhookEventClient<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one N8nWebhookEvent that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {N8nWebhookEventFindUniqueOrThrowArgs} args - Arguments to find a N8nWebhookEvent
     * @example
     * // Get one N8nWebhookEvent
     * const n8nWebhookEvent = await prisma.n8nWebhookEvent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends N8nWebhookEventFindUniqueOrThrowArgs>(args: SelectSubset<T, N8nWebhookEventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__N8nWebhookEventClient<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first N8nWebhookEvent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nWebhookEventFindFirstArgs} args - Arguments to find a N8nWebhookEvent
     * @example
     * // Get one N8nWebhookEvent
     * const n8nWebhookEvent = await prisma.n8nWebhookEvent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends N8nWebhookEventFindFirstArgs>(args?: SelectSubset<T, N8nWebhookEventFindFirstArgs<ExtArgs>>): Prisma__N8nWebhookEventClient<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first N8nWebhookEvent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nWebhookEventFindFirstOrThrowArgs} args - Arguments to find a N8nWebhookEvent
     * @example
     * // Get one N8nWebhookEvent
     * const n8nWebhookEvent = await prisma.n8nWebhookEvent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends N8nWebhookEventFindFirstOrThrowArgs>(args?: SelectSubset<T, N8nWebhookEventFindFirstOrThrowArgs<ExtArgs>>): Prisma__N8nWebhookEventClient<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more N8nWebhookEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nWebhookEventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all N8nWebhookEvents
     * const n8nWebhookEvents = await prisma.n8nWebhookEvent.findMany()
     * 
     * // Get first 10 N8nWebhookEvents
     * const n8nWebhookEvents = await prisma.n8nWebhookEvent.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const n8nWebhookEventWithIdOnly = await prisma.n8nWebhookEvent.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends N8nWebhookEventFindManyArgs>(args?: SelectSubset<T, N8nWebhookEventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a N8nWebhookEvent.
     * @param {N8nWebhookEventCreateArgs} args - Arguments to create a N8nWebhookEvent.
     * @example
     * // Create one N8nWebhookEvent
     * const N8nWebhookEvent = await prisma.n8nWebhookEvent.create({
     *   data: {
     *     // ... data to create a N8nWebhookEvent
     *   }
     * })
     * 
     */
    create<T extends N8nWebhookEventCreateArgs>(args: SelectSubset<T, N8nWebhookEventCreateArgs<ExtArgs>>): Prisma__N8nWebhookEventClient<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many N8nWebhookEvents.
     * @param {N8nWebhookEventCreateManyArgs} args - Arguments to create many N8nWebhookEvents.
     * @example
     * // Create many N8nWebhookEvents
     * const n8nWebhookEvent = await prisma.n8nWebhookEvent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends N8nWebhookEventCreateManyArgs>(args?: SelectSubset<T, N8nWebhookEventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many N8nWebhookEvents and returns the data saved in the database.
     * @param {N8nWebhookEventCreateManyAndReturnArgs} args - Arguments to create many N8nWebhookEvents.
     * @example
     * // Create many N8nWebhookEvents
     * const n8nWebhookEvent = await prisma.n8nWebhookEvent.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many N8nWebhookEvents and only return the `id`
     * const n8nWebhookEventWithIdOnly = await prisma.n8nWebhookEvent.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends N8nWebhookEventCreateManyAndReturnArgs>(args?: SelectSubset<T, N8nWebhookEventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a N8nWebhookEvent.
     * @param {N8nWebhookEventDeleteArgs} args - Arguments to delete one N8nWebhookEvent.
     * @example
     * // Delete one N8nWebhookEvent
     * const N8nWebhookEvent = await prisma.n8nWebhookEvent.delete({
     *   where: {
     *     // ... filter to delete one N8nWebhookEvent
     *   }
     * })
     * 
     */
    delete<T extends N8nWebhookEventDeleteArgs>(args: SelectSubset<T, N8nWebhookEventDeleteArgs<ExtArgs>>): Prisma__N8nWebhookEventClient<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one N8nWebhookEvent.
     * @param {N8nWebhookEventUpdateArgs} args - Arguments to update one N8nWebhookEvent.
     * @example
     * // Update one N8nWebhookEvent
     * const n8nWebhookEvent = await prisma.n8nWebhookEvent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends N8nWebhookEventUpdateArgs>(args: SelectSubset<T, N8nWebhookEventUpdateArgs<ExtArgs>>): Prisma__N8nWebhookEventClient<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more N8nWebhookEvents.
     * @param {N8nWebhookEventDeleteManyArgs} args - Arguments to filter N8nWebhookEvents to delete.
     * @example
     * // Delete a few N8nWebhookEvents
     * const { count } = await prisma.n8nWebhookEvent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends N8nWebhookEventDeleteManyArgs>(args?: SelectSubset<T, N8nWebhookEventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more N8nWebhookEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nWebhookEventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many N8nWebhookEvents
     * const n8nWebhookEvent = await prisma.n8nWebhookEvent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends N8nWebhookEventUpdateManyArgs>(args: SelectSubset<T, N8nWebhookEventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one N8nWebhookEvent.
     * @param {N8nWebhookEventUpsertArgs} args - Arguments to update or create a N8nWebhookEvent.
     * @example
     * // Update or create a N8nWebhookEvent
     * const n8nWebhookEvent = await prisma.n8nWebhookEvent.upsert({
     *   create: {
     *     // ... data to create a N8nWebhookEvent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the N8nWebhookEvent we want to update
     *   }
     * })
     */
    upsert<T extends N8nWebhookEventUpsertArgs>(args: SelectSubset<T, N8nWebhookEventUpsertArgs<ExtArgs>>): Prisma__N8nWebhookEventClient<$Result.GetResult<Prisma.$N8nWebhookEventPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of N8nWebhookEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nWebhookEventCountArgs} args - Arguments to filter N8nWebhookEvents to count.
     * @example
     * // Count the number of N8nWebhookEvents
     * const count = await prisma.n8nWebhookEvent.count({
     *   where: {
     *     // ... the filter for the N8nWebhookEvents we want to count
     *   }
     * })
    **/
    count<T extends N8nWebhookEventCountArgs>(
      args?: Subset<T, N8nWebhookEventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], N8nWebhookEventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a N8nWebhookEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nWebhookEventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends N8nWebhookEventAggregateArgs>(args: Subset<T, N8nWebhookEventAggregateArgs>): Prisma.PrismaPromise<GetN8nWebhookEventAggregateType<T>>

    /**
     * Group by N8nWebhookEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {N8nWebhookEventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends N8nWebhookEventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: N8nWebhookEventGroupByArgs['orderBy'] }
        : { orderBy?: N8nWebhookEventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, N8nWebhookEventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetN8nWebhookEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the N8nWebhookEvent model
   */
  readonly fields: N8nWebhookEventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for N8nWebhookEvent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__N8nWebhookEventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    n8nIntegration<T extends N8nIntegrationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, N8nIntegrationDefaultArgs<ExtArgs>>): Prisma__N8nIntegrationClient<$Result.GetResult<Prisma.$N8nIntegrationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the N8nWebhookEvent model
   */ 
  interface N8nWebhookEventFieldRefs {
    readonly id: FieldRef<"N8nWebhookEvent", 'String'>
    readonly n8nIntegrationId: FieldRef<"N8nWebhookEvent", 'String'>
    readonly workflowId: FieldRef<"N8nWebhookEvent", 'String'>
    readonly workflowName: FieldRef<"N8nWebhookEvent", 'String'>
    readonly executionId: FieldRef<"N8nWebhookEvent", 'String'>
    readonly eventType: FieldRef<"N8nWebhookEvent", 'String'>
    readonly status: FieldRef<"N8nWebhookEvent", 'String'>
    readonly startTime: FieldRef<"N8nWebhookEvent", 'DateTime'>
    readonly endTime: FieldRef<"N8nWebhookEvent", 'DateTime'>
    readonly duration: FieldRef<"N8nWebhookEvent", 'Int'>
    readonly inputData: FieldRef<"N8nWebhookEvent", 'Json'>
    readonly outputData: FieldRef<"N8nWebhookEvent", 'Json'>
    readonly errorMessage: FieldRef<"N8nWebhookEvent", 'String'>
    readonly metadata: FieldRef<"N8nWebhookEvent", 'Json'>
    readonly createdAt: FieldRef<"N8nWebhookEvent", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * N8nWebhookEvent findUnique
   */
  export type N8nWebhookEventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
    /**
     * Filter, which N8nWebhookEvent to fetch.
     */
    where: N8nWebhookEventWhereUniqueInput
  }

  /**
   * N8nWebhookEvent findUniqueOrThrow
   */
  export type N8nWebhookEventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
    /**
     * Filter, which N8nWebhookEvent to fetch.
     */
    where: N8nWebhookEventWhereUniqueInput
  }

  /**
   * N8nWebhookEvent findFirst
   */
  export type N8nWebhookEventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
    /**
     * Filter, which N8nWebhookEvent to fetch.
     */
    where?: N8nWebhookEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of N8nWebhookEvents to fetch.
     */
    orderBy?: N8nWebhookEventOrderByWithRelationInput | N8nWebhookEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for N8nWebhookEvents.
     */
    cursor?: N8nWebhookEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` N8nWebhookEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` N8nWebhookEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of N8nWebhookEvents.
     */
    distinct?: N8nWebhookEventScalarFieldEnum | N8nWebhookEventScalarFieldEnum[]
  }

  /**
   * N8nWebhookEvent findFirstOrThrow
   */
  export type N8nWebhookEventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
    /**
     * Filter, which N8nWebhookEvent to fetch.
     */
    where?: N8nWebhookEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of N8nWebhookEvents to fetch.
     */
    orderBy?: N8nWebhookEventOrderByWithRelationInput | N8nWebhookEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for N8nWebhookEvents.
     */
    cursor?: N8nWebhookEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` N8nWebhookEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` N8nWebhookEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of N8nWebhookEvents.
     */
    distinct?: N8nWebhookEventScalarFieldEnum | N8nWebhookEventScalarFieldEnum[]
  }

  /**
   * N8nWebhookEvent findMany
   */
  export type N8nWebhookEventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
    /**
     * Filter, which N8nWebhookEvents to fetch.
     */
    where?: N8nWebhookEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of N8nWebhookEvents to fetch.
     */
    orderBy?: N8nWebhookEventOrderByWithRelationInput | N8nWebhookEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing N8nWebhookEvents.
     */
    cursor?: N8nWebhookEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` N8nWebhookEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` N8nWebhookEvents.
     */
    skip?: number
    distinct?: N8nWebhookEventScalarFieldEnum | N8nWebhookEventScalarFieldEnum[]
  }

  /**
   * N8nWebhookEvent create
   */
  export type N8nWebhookEventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
    /**
     * The data needed to create a N8nWebhookEvent.
     */
    data: XOR<N8nWebhookEventCreateInput, N8nWebhookEventUncheckedCreateInput>
  }

  /**
   * N8nWebhookEvent createMany
   */
  export type N8nWebhookEventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many N8nWebhookEvents.
     */
    data: N8nWebhookEventCreateManyInput | N8nWebhookEventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * N8nWebhookEvent createManyAndReturn
   */
  export type N8nWebhookEventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many N8nWebhookEvents.
     */
    data: N8nWebhookEventCreateManyInput | N8nWebhookEventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * N8nWebhookEvent update
   */
  export type N8nWebhookEventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
    /**
     * The data needed to update a N8nWebhookEvent.
     */
    data: XOR<N8nWebhookEventUpdateInput, N8nWebhookEventUncheckedUpdateInput>
    /**
     * Choose, which N8nWebhookEvent to update.
     */
    where: N8nWebhookEventWhereUniqueInput
  }

  /**
   * N8nWebhookEvent updateMany
   */
  export type N8nWebhookEventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update N8nWebhookEvents.
     */
    data: XOR<N8nWebhookEventUpdateManyMutationInput, N8nWebhookEventUncheckedUpdateManyInput>
    /**
     * Filter which N8nWebhookEvents to update
     */
    where?: N8nWebhookEventWhereInput
  }

  /**
   * N8nWebhookEvent upsert
   */
  export type N8nWebhookEventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
    /**
     * The filter to search for the N8nWebhookEvent to update in case it exists.
     */
    where: N8nWebhookEventWhereUniqueInput
    /**
     * In case the N8nWebhookEvent found by the `where` argument doesn't exist, create a new N8nWebhookEvent with this data.
     */
    create: XOR<N8nWebhookEventCreateInput, N8nWebhookEventUncheckedCreateInput>
    /**
     * In case the N8nWebhookEvent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<N8nWebhookEventUpdateInput, N8nWebhookEventUncheckedUpdateInput>
  }

  /**
   * N8nWebhookEvent delete
   */
  export type N8nWebhookEventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
    /**
     * Filter which N8nWebhookEvent to delete.
     */
    where: N8nWebhookEventWhereUniqueInput
  }

  /**
   * N8nWebhookEvent deleteMany
   */
  export type N8nWebhookEventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which N8nWebhookEvents to delete
     */
    where?: N8nWebhookEventWhereInput
  }

  /**
   * N8nWebhookEvent without action
   */
  export type N8nWebhookEventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the N8nWebhookEvent
     */
    select?: N8nWebhookEventSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: N8nWebhookEventInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    firstName: 'firstName',
    lastName: 'lastName',
    isActive: 'isActive',
    emailVerified: 'emailVerified',
    emailVerificationToken: 'emailVerificationToken',
    passwordResetToken: 'passwordResetToken',
    passwordResetExpires: 'passwordResetExpires',
    lastLoginAt: 'lastLoginAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    businessEntityId: 'businessEntityId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const BusinessEntityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    domain: 'domain',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BusinessEntityScalarFieldEnum = (typeof BusinessEntityScalarFieldEnum)[keyof typeof BusinessEntityScalarFieldEnum]


  export const GoogleAnalyticsIntegrationScalarFieldEnum: {
    id: 'id',
    businessEntityId: 'businessEntityId',
    propertyId: 'propertyId',
    clientId: 'clientId',
    clientSecret: 'clientSecret',
    refreshToken: 'refreshToken',
    accessToken: 'accessToken',
    accessTokenExpiresAt: 'accessTokenExpiresAt',
    isActive: 'isActive',
    lastSyncAt: 'lastSyncAt',
    syncFrequency: 'syncFrequency',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type GoogleAnalyticsIntegrationScalarFieldEnum = (typeof GoogleAnalyticsIntegrationScalarFieldEnum)[keyof typeof GoogleAnalyticsIntegrationScalarFieldEnum]


  export const N8nIntegrationScalarFieldEnum: {
    id: 'id',
    businessEntityId: 'businessEntityId',
    webhookUrl: 'webhookUrl',
    webhookToken: 'webhookToken',
    isActive: 'isActive',
    lastWebhookAt: 'lastWebhookAt',
    webhookCount: 'webhookCount',
    lastErrorAt: 'lastErrorAt',
    errorMessage: 'errorMessage',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type N8nIntegrationScalarFieldEnum = (typeof N8nIntegrationScalarFieldEnum)[keyof typeof N8nIntegrationScalarFieldEnum]


  export const N8nWebhookEventScalarFieldEnum: {
    id: 'id',
    n8nIntegrationId: 'n8nIntegrationId',
    workflowId: 'workflowId',
    workflowName: 'workflowName',
    executionId: 'executionId',
    eventType: 'eventType',
    status: 'status',
    startTime: 'startTime',
    endTime: 'endTime',
    duration: 'duration',
    inputData: 'inputData',
    outputData: 'outputData',
    errorMessage: 'errorMessage',
    metadata: 'metadata',
    createdAt: 'createdAt'
  };

  export type N8nWebhookEventScalarFieldEnum = (typeof N8nWebhookEventScalarFieldEnum)[keyof typeof N8nWebhookEventScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerificationToken?: StringNullableFilter<"User"> | string | null
    passwordResetToken?: StringNullableFilter<"User"> | string | null
    passwordResetExpires?: DateTimeNullableFilter<"User"> | Date | string | null
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    businessEntityId?: StringFilter<"User"> | string
    businessEntity?: XOR<BusinessEntityRelationFilter, BusinessEntityWhereInput>
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    isActive?: SortOrder
    emailVerified?: SortOrder
    emailVerificationToken?: SortOrderInput | SortOrder
    passwordResetToken?: SortOrderInput | SortOrder
    passwordResetExpires?: SortOrderInput | SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businessEntityId?: SortOrder
    businessEntity?: BusinessEntityOrderByWithRelationInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerificationToken?: StringNullableFilter<"User"> | string | null
    passwordResetToken?: StringNullableFilter<"User"> | string | null
    passwordResetExpires?: DateTimeNullableFilter<"User"> | Date | string | null
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    businessEntityId?: StringFilter<"User"> | string
    businessEntity?: XOR<BusinessEntityRelationFilter, BusinessEntityWhereInput>
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    isActive?: SortOrder
    emailVerified?: SortOrder
    emailVerificationToken?: SortOrderInput | SortOrder
    passwordResetToken?: SortOrderInput | SortOrder
    passwordResetExpires?: SortOrderInput | SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businessEntityId?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    emailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    emailVerificationToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    passwordResetToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    passwordResetExpires?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    businessEntityId?: StringWithAggregatesFilter<"User"> | string
  }

  export type BusinessEntityWhereInput = {
    AND?: BusinessEntityWhereInput | BusinessEntityWhereInput[]
    OR?: BusinessEntityWhereInput[]
    NOT?: BusinessEntityWhereInput | BusinessEntityWhereInput[]
    id?: StringFilter<"BusinessEntity"> | string
    name?: StringFilter<"BusinessEntity"> | string
    description?: StringNullableFilter<"BusinessEntity"> | string | null
    domain?: StringNullableFilter<"BusinessEntity"> | string | null
    isActive?: BoolFilter<"BusinessEntity"> | boolean
    createdAt?: DateTimeFilter<"BusinessEntity"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessEntity"> | Date | string
    users?: UserListRelationFilter
    googleAnalytics?: GoogleAnalyticsIntegrationListRelationFilter
    n8nIntegrations?: N8nIntegrationListRelationFilter
  }

  export type BusinessEntityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    domain?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    users?: UserOrderByRelationAggregateInput
    googleAnalytics?: GoogleAnalyticsIntegrationOrderByRelationAggregateInput
    n8nIntegrations?: N8nIntegrationOrderByRelationAggregateInput
  }

  export type BusinessEntityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    domain?: string
    AND?: BusinessEntityWhereInput | BusinessEntityWhereInput[]
    OR?: BusinessEntityWhereInput[]
    NOT?: BusinessEntityWhereInput | BusinessEntityWhereInput[]
    name?: StringFilter<"BusinessEntity"> | string
    description?: StringNullableFilter<"BusinessEntity"> | string | null
    isActive?: BoolFilter<"BusinessEntity"> | boolean
    createdAt?: DateTimeFilter<"BusinessEntity"> | Date | string
    updatedAt?: DateTimeFilter<"BusinessEntity"> | Date | string
    users?: UserListRelationFilter
    googleAnalytics?: GoogleAnalyticsIntegrationListRelationFilter
    n8nIntegrations?: N8nIntegrationListRelationFilter
  }, "id" | "domain">

  export type BusinessEntityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    domain?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BusinessEntityCountOrderByAggregateInput
    _max?: BusinessEntityMaxOrderByAggregateInput
    _min?: BusinessEntityMinOrderByAggregateInput
  }

  export type BusinessEntityScalarWhereWithAggregatesInput = {
    AND?: BusinessEntityScalarWhereWithAggregatesInput | BusinessEntityScalarWhereWithAggregatesInput[]
    OR?: BusinessEntityScalarWhereWithAggregatesInput[]
    NOT?: BusinessEntityScalarWhereWithAggregatesInput | BusinessEntityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BusinessEntity"> | string
    name?: StringWithAggregatesFilter<"BusinessEntity"> | string
    description?: StringNullableWithAggregatesFilter<"BusinessEntity"> | string | null
    domain?: StringNullableWithAggregatesFilter<"BusinessEntity"> | string | null
    isActive?: BoolWithAggregatesFilter<"BusinessEntity"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"BusinessEntity"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BusinessEntity"> | Date | string
  }

  export type GoogleAnalyticsIntegrationWhereInput = {
    AND?: GoogleAnalyticsIntegrationWhereInput | GoogleAnalyticsIntegrationWhereInput[]
    OR?: GoogleAnalyticsIntegrationWhereInput[]
    NOT?: GoogleAnalyticsIntegrationWhereInput | GoogleAnalyticsIntegrationWhereInput[]
    id?: StringFilter<"GoogleAnalyticsIntegration"> | string
    businessEntityId?: StringFilter<"GoogleAnalyticsIntegration"> | string
    propertyId?: StringFilter<"GoogleAnalyticsIntegration"> | string
    clientId?: StringFilter<"GoogleAnalyticsIntegration"> | string
    clientSecret?: StringFilter<"GoogleAnalyticsIntegration"> | string
    refreshToken?: StringNullableFilter<"GoogleAnalyticsIntegration"> | string | null
    accessToken?: StringNullableFilter<"GoogleAnalyticsIntegration"> | string | null
    accessTokenExpiresAt?: DateTimeNullableFilter<"GoogleAnalyticsIntegration"> | Date | string | null
    isActive?: BoolFilter<"GoogleAnalyticsIntegration"> | boolean
    lastSyncAt?: DateTimeNullableFilter<"GoogleAnalyticsIntegration"> | Date | string | null
    syncFrequency?: StringFilter<"GoogleAnalyticsIntegration"> | string
    createdAt?: DateTimeFilter<"GoogleAnalyticsIntegration"> | Date | string
    updatedAt?: DateTimeFilter<"GoogleAnalyticsIntegration"> | Date | string
    businessEntity?: XOR<BusinessEntityRelationFilter, BusinessEntityWhereInput>
  }

  export type GoogleAnalyticsIntegrationOrderByWithRelationInput = {
    id?: SortOrder
    businessEntityId?: SortOrder
    propertyId?: SortOrder
    clientId?: SortOrder
    clientSecret?: SortOrder
    refreshToken?: SortOrderInput | SortOrder
    accessToken?: SortOrderInput | SortOrder
    accessTokenExpiresAt?: SortOrderInput | SortOrder
    isActive?: SortOrder
    lastSyncAt?: SortOrderInput | SortOrder
    syncFrequency?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businessEntity?: BusinessEntityOrderByWithRelationInput
  }

  export type GoogleAnalyticsIntegrationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: GoogleAnalyticsIntegrationWhereInput | GoogleAnalyticsIntegrationWhereInput[]
    OR?: GoogleAnalyticsIntegrationWhereInput[]
    NOT?: GoogleAnalyticsIntegrationWhereInput | GoogleAnalyticsIntegrationWhereInput[]
    businessEntityId?: StringFilter<"GoogleAnalyticsIntegration"> | string
    propertyId?: StringFilter<"GoogleAnalyticsIntegration"> | string
    clientId?: StringFilter<"GoogleAnalyticsIntegration"> | string
    clientSecret?: StringFilter<"GoogleAnalyticsIntegration"> | string
    refreshToken?: StringNullableFilter<"GoogleAnalyticsIntegration"> | string | null
    accessToken?: StringNullableFilter<"GoogleAnalyticsIntegration"> | string | null
    accessTokenExpiresAt?: DateTimeNullableFilter<"GoogleAnalyticsIntegration"> | Date | string | null
    isActive?: BoolFilter<"GoogleAnalyticsIntegration"> | boolean
    lastSyncAt?: DateTimeNullableFilter<"GoogleAnalyticsIntegration"> | Date | string | null
    syncFrequency?: StringFilter<"GoogleAnalyticsIntegration"> | string
    createdAt?: DateTimeFilter<"GoogleAnalyticsIntegration"> | Date | string
    updatedAt?: DateTimeFilter<"GoogleAnalyticsIntegration"> | Date | string
    businessEntity?: XOR<BusinessEntityRelationFilter, BusinessEntityWhereInput>
  }, "id">

  export type GoogleAnalyticsIntegrationOrderByWithAggregationInput = {
    id?: SortOrder
    businessEntityId?: SortOrder
    propertyId?: SortOrder
    clientId?: SortOrder
    clientSecret?: SortOrder
    refreshToken?: SortOrderInput | SortOrder
    accessToken?: SortOrderInput | SortOrder
    accessTokenExpiresAt?: SortOrderInput | SortOrder
    isActive?: SortOrder
    lastSyncAt?: SortOrderInput | SortOrder
    syncFrequency?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: GoogleAnalyticsIntegrationCountOrderByAggregateInput
    _max?: GoogleAnalyticsIntegrationMaxOrderByAggregateInput
    _min?: GoogleAnalyticsIntegrationMinOrderByAggregateInput
  }

  export type GoogleAnalyticsIntegrationScalarWhereWithAggregatesInput = {
    AND?: GoogleAnalyticsIntegrationScalarWhereWithAggregatesInput | GoogleAnalyticsIntegrationScalarWhereWithAggregatesInput[]
    OR?: GoogleAnalyticsIntegrationScalarWhereWithAggregatesInput[]
    NOT?: GoogleAnalyticsIntegrationScalarWhereWithAggregatesInput | GoogleAnalyticsIntegrationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"GoogleAnalyticsIntegration"> | string
    businessEntityId?: StringWithAggregatesFilter<"GoogleAnalyticsIntegration"> | string
    propertyId?: StringWithAggregatesFilter<"GoogleAnalyticsIntegration"> | string
    clientId?: StringWithAggregatesFilter<"GoogleAnalyticsIntegration"> | string
    clientSecret?: StringWithAggregatesFilter<"GoogleAnalyticsIntegration"> | string
    refreshToken?: StringNullableWithAggregatesFilter<"GoogleAnalyticsIntegration"> | string | null
    accessToken?: StringNullableWithAggregatesFilter<"GoogleAnalyticsIntegration"> | string | null
    accessTokenExpiresAt?: DateTimeNullableWithAggregatesFilter<"GoogleAnalyticsIntegration"> | Date | string | null
    isActive?: BoolWithAggregatesFilter<"GoogleAnalyticsIntegration"> | boolean
    lastSyncAt?: DateTimeNullableWithAggregatesFilter<"GoogleAnalyticsIntegration"> | Date | string | null
    syncFrequency?: StringWithAggregatesFilter<"GoogleAnalyticsIntegration"> | string
    createdAt?: DateTimeWithAggregatesFilter<"GoogleAnalyticsIntegration"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"GoogleAnalyticsIntegration"> | Date | string
  }

  export type N8nIntegrationWhereInput = {
    AND?: N8nIntegrationWhereInput | N8nIntegrationWhereInput[]
    OR?: N8nIntegrationWhereInput[]
    NOT?: N8nIntegrationWhereInput | N8nIntegrationWhereInput[]
    id?: StringFilter<"N8nIntegration"> | string
    businessEntityId?: StringFilter<"N8nIntegration"> | string
    webhookUrl?: StringFilter<"N8nIntegration"> | string
    webhookToken?: StringFilter<"N8nIntegration"> | string
    isActive?: BoolFilter<"N8nIntegration"> | boolean
    lastWebhookAt?: DateTimeNullableFilter<"N8nIntegration"> | Date | string | null
    webhookCount?: IntFilter<"N8nIntegration"> | number
    lastErrorAt?: DateTimeNullableFilter<"N8nIntegration"> | Date | string | null
    errorMessage?: StringNullableFilter<"N8nIntegration"> | string | null
    createdAt?: DateTimeFilter<"N8nIntegration"> | Date | string
    updatedAt?: DateTimeFilter<"N8nIntegration"> | Date | string
    businessEntity?: XOR<BusinessEntityRelationFilter, BusinessEntityWhereInput>
    webhookEvents?: N8nWebhookEventListRelationFilter
  }

  export type N8nIntegrationOrderByWithRelationInput = {
    id?: SortOrder
    businessEntityId?: SortOrder
    webhookUrl?: SortOrder
    webhookToken?: SortOrder
    isActive?: SortOrder
    lastWebhookAt?: SortOrderInput | SortOrder
    webhookCount?: SortOrder
    lastErrorAt?: SortOrderInput | SortOrder
    errorMessage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businessEntity?: BusinessEntityOrderByWithRelationInput
    webhookEvents?: N8nWebhookEventOrderByRelationAggregateInput
  }

  export type N8nIntegrationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: N8nIntegrationWhereInput | N8nIntegrationWhereInput[]
    OR?: N8nIntegrationWhereInput[]
    NOT?: N8nIntegrationWhereInput | N8nIntegrationWhereInput[]
    businessEntityId?: StringFilter<"N8nIntegration"> | string
    webhookUrl?: StringFilter<"N8nIntegration"> | string
    webhookToken?: StringFilter<"N8nIntegration"> | string
    isActive?: BoolFilter<"N8nIntegration"> | boolean
    lastWebhookAt?: DateTimeNullableFilter<"N8nIntegration"> | Date | string | null
    webhookCount?: IntFilter<"N8nIntegration"> | number
    lastErrorAt?: DateTimeNullableFilter<"N8nIntegration"> | Date | string | null
    errorMessage?: StringNullableFilter<"N8nIntegration"> | string | null
    createdAt?: DateTimeFilter<"N8nIntegration"> | Date | string
    updatedAt?: DateTimeFilter<"N8nIntegration"> | Date | string
    businessEntity?: XOR<BusinessEntityRelationFilter, BusinessEntityWhereInput>
    webhookEvents?: N8nWebhookEventListRelationFilter
  }, "id">

  export type N8nIntegrationOrderByWithAggregationInput = {
    id?: SortOrder
    businessEntityId?: SortOrder
    webhookUrl?: SortOrder
    webhookToken?: SortOrder
    isActive?: SortOrder
    lastWebhookAt?: SortOrderInput | SortOrder
    webhookCount?: SortOrder
    lastErrorAt?: SortOrderInput | SortOrder
    errorMessage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: N8nIntegrationCountOrderByAggregateInput
    _avg?: N8nIntegrationAvgOrderByAggregateInput
    _max?: N8nIntegrationMaxOrderByAggregateInput
    _min?: N8nIntegrationMinOrderByAggregateInput
    _sum?: N8nIntegrationSumOrderByAggregateInput
  }

  export type N8nIntegrationScalarWhereWithAggregatesInput = {
    AND?: N8nIntegrationScalarWhereWithAggregatesInput | N8nIntegrationScalarWhereWithAggregatesInput[]
    OR?: N8nIntegrationScalarWhereWithAggregatesInput[]
    NOT?: N8nIntegrationScalarWhereWithAggregatesInput | N8nIntegrationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"N8nIntegration"> | string
    businessEntityId?: StringWithAggregatesFilter<"N8nIntegration"> | string
    webhookUrl?: StringWithAggregatesFilter<"N8nIntegration"> | string
    webhookToken?: StringWithAggregatesFilter<"N8nIntegration"> | string
    isActive?: BoolWithAggregatesFilter<"N8nIntegration"> | boolean
    lastWebhookAt?: DateTimeNullableWithAggregatesFilter<"N8nIntegration"> | Date | string | null
    webhookCount?: IntWithAggregatesFilter<"N8nIntegration"> | number
    lastErrorAt?: DateTimeNullableWithAggregatesFilter<"N8nIntegration"> | Date | string | null
    errorMessage?: StringNullableWithAggregatesFilter<"N8nIntegration"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"N8nIntegration"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"N8nIntegration"> | Date | string
  }

  export type N8nWebhookEventWhereInput = {
    AND?: N8nWebhookEventWhereInput | N8nWebhookEventWhereInput[]
    OR?: N8nWebhookEventWhereInput[]
    NOT?: N8nWebhookEventWhereInput | N8nWebhookEventWhereInput[]
    id?: StringFilter<"N8nWebhookEvent"> | string
    n8nIntegrationId?: StringFilter<"N8nWebhookEvent"> | string
    workflowId?: StringFilter<"N8nWebhookEvent"> | string
    workflowName?: StringFilter<"N8nWebhookEvent"> | string
    executionId?: StringFilter<"N8nWebhookEvent"> | string
    eventType?: StringFilter<"N8nWebhookEvent"> | string
    status?: StringFilter<"N8nWebhookEvent"> | string
    startTime?: DateTimeFilter<"N8nWebhookEvent"> | Date | string
    endTime?: DateTimeNullableFilter<"N8nWebhookEvent"> | Date | string | null
    duration?: IntNullableFilter<"N8nWebhookEvent"> | number | null
    inputData?: JsonFilter<"N8nWebhookEvent">
    outputData?: JsonFilter<"N8nWebhookEvent">
    errorMessage?: StringNullableFilter<"N8nWebhookEvent"> | string | null
    metadata?: JsonFilter<"N8nWebhookEvent">
    createdAt?: DateTimeFilter<"N8nWebhookEvent"> | Date | string
    n8nIntegration?: XOR<N8nIntegrationRelationFilter, N8nIntegrationWhereInput>
  }

  export type N8nWebhookEventOrderByWithRelationInput = {
    id?: SortOrder
    n8nIntegrationId?: SortOrder
    workflowId?: SortOrder
    workflowName?: SortOrder
    executionId?: SortOrder
    eventType?: SortOrder
    status?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    inputData?: SortOrder
    outputData?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    n8nIntegration?: N8nIntegrationOrderByWithRelationInput
  }

  export type N8nWebhookEventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: N8nWebhookEventWhereInput | N8nWebhookEventWhereInput[]
    OR?: N8nWebhookEventWhereInput[]
    NOT?: N8nWebhookEventWhereInput | N8nWebhookEventWhereInput[]
    n8nIntegrationId?: StringFilter<"N8nWebhookEvent"> | string
    workflowId?: StringFilter<"N8nWebhookEvent"> | string
    workflowName?: StringFilter<"N8nWebhookEvent"> | string
    executionId?: StringFilter<"N8nWebhookEvent"> | string
    eventType?: StringFilter<"N8nWebhookEvent"> | string
    status?: StringFilter<"N8nWebhookEvent"> | string
    startTime?: DateTimeFilter<"N8nWebhookEvent"> | Date | string
    endTime?: DateTimeNullableFilter<"N8nWebhookEvent"> | Date | string | null
    duration?: IntNullableFilter<"N8nWebhookEvent"> | number | null
    inputData?: JsonFilter<"N8nWebhookEvent">
    outputData?: JsonFilter<"N8nWebhookEvent">
    errorMessage?: StringNullableFilter<"N8nWebhookEvent"> | string | null
    metadata?: JsonFilter<"N8nWebhookEvent">
    createdAt?: DateTimeFilter<"N8nWebhookEvent"> | Date | string
    n8nIntegration?: XOR<N8nIntegrationRelationFilter, N8nIntegrationWhereInput>
  }, "id">

  export type N8nWebhookEventOrderByWithAggregationInput = {
    id?: SortOrder
    n8nIntegrationId?: SortOrder
    workflowId?: SortOrder
    workflowName?: SortOrder
    executionId?: SortOrder
    eventType?: SortOrder
    status?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    inputData?: SortOrder
    outputData?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    _count?: N8nWebhookEventCountOrderByAggregateInput
    _avg?: N8nWebhookEventAvgOrderByAggregateInput
    _max?: N8nWebhookEventMaxOrderByAggregateInput
    _min?: N8nWebhookEventMinOrderByAggregateInput
    _sum?: N8nWebhookEventSumOrderByAggregateInput
  }

  export type N8nWebhookEventScalarWhereWithAggregatesInput = {
    AND?: N8nWebhookEventScalarWhereWithAggregatesInput | N8nWebhookEventScalarWhereWithAggregatesInput[]
    OR?: N8nWebhookEventScalarWhereWithAggregatesInput[]
    NOT?: N8nWebhookEventScalarWhereWithAggregatesInput | N8nWebhookEventScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"N8nWebhookEvent"> | string
    n8nIntegrationId?: StringWithAggregatesFilter<"N8nWebhookEvent"> | string
    workflowId?: StringWithAggregatesFilter<"N8nWebhookEvent"> | string
    workflowName?: StringWithAggregatesFilter<"N8nWebhookEvent"> | string
    executionId?: StringWithAggregatesFilter<"N8nWebhookEvent"> | string
    eventType?: StringWithAggregatesFilter<"N8nWebhookEvent"> | string
    status?: StringWithAggregatesFilter<"N8nWebhookEvent"> | string
    startTime?: DateTimeWithAggregatesFilter<"N8nWebhookEvent"> | Date | string
    endTime?: DateTimeNullableWithAggregatesFilter<"N8nWebhookEvent"> | Date | string | null
    duration?: IntNullableWithAggregatesFilter<"N8nWebhookEvent"> | number | null
    inputData?: JsonWithAggregatesFilter<"N8nWebhookEvent">
    outputData?: JsonWithAggregatesFilter<"N8nWebhookEvent">
    errorMessage?: StringNullableWithAggregatesFilter<"N8nWebhookEvent"> | string | null
    metadata?: JsonWithAggregatesFilter<"N8nWebhookEvent">
    createdAt?: DateTimeWithAggregatesFilter<"N8nWebhookEvent"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    isActive?: boolean
    emailVerified?: boolean
    emailVerificationToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    businessEntity: BusinessEntityCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    isActive?: boolean
    emailVerified?: boolean
    emailVerificationToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    businessEntityId: string
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessEntity?: BusinessEntityUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessEntityId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    isActive?: boolean
    emailVerified?: boolean
    emailVerificationToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    businessEntityId: string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessEntityId?: StringFieldUpdateOperationsInput | string
  }

  export type BusinessEntityCreateInput = {
    id?: string
    name: string
    description?: string | null
    domain?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutBusinessEntityInput
    googleAnalytics?: GoogleAnalyticsIntegrationCreateNestedManyWithoutBusinessEntityInput
    n8nIntegrations?: N8nIntegrationCreateNestedManyWithoutBusinessEntityInput
  }

  export type BusinessEntityUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    domain?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutBusinessEntityInput
    googleAnalytics?: GoogleAnalyticsIntegrationUncheckedCreateNestedManyWithoutBusinessEntityInput
    n8nIntegrations?: N8nIntegrationUncheckedCreateNestedManyWithoutBusinessEntityInput
  }

  export type BusinessEntityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutBusinessEntityNestedInput
    googleAnalytics?: GoogleAnalyticsIntegrationUpdateManyWithoutBusinessEntityNestedInput
    n8nIntegrations?: N8nIntegrationUpdateManyWithoutBusinessEntityNestedInput
  }

  export type BusinessEntityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutBusinessEntityNestedInput
    googleAnalytics?: GoogleAnalyticsIntegrationUncheckedUpdateManyWithoutBusinessEntityNestedInput
    n8nIntegrations?: N8nIntegrationUncheckedUpdateManyWithoutBusinessEntityNestedInput
  }

  export type BusinessEntityCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    domain?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BusinessEntityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BusinessEntityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoogleAnalyticsIntegrationCreateInput = {
    id?: string
    propertyId: string
    clientId: string
    clientSecret: string
    refreshToken?: string | null
    accessToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    isActive?: boolean
    lastSyncAt?: Date | string | null
    syncFrequency?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    businessEntity: BusinessEntityCreateNestedOneWithoutGoogleAnalyticsInput
  }

  export type GoogleAnalyticsIntegrationUncheckedCreateInput = {
    id?: string
    businessEntityId: string
    propertyId: string
    clientId: string
    clientSecret: string
    refreshToken?: string | null
    accessToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    isActive?: boolean
    lastSyncAt?: Date | string | null
    syncFrequency?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoogleAnalyticsIntegrationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    clientSecret?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncFrequency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessEntity?: BusinessEntityUpdateOneRequiredWithoutGoogleAnalyticsNestedInput
  }

  export type GoogleAnalyticsIntegrationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessEntityId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    clientSecret?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncFrequency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoogleAnalyticsIntegrationCreateManyInput = {
    id?: string
    businessEntityId: string
    propertyId: string
    clientId: string
    clientSecret: string
    refreshToken?: string | null
    accessToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    isActive?: boolean
    lastSyncAt?: Date | string | null
    syncFrequency?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoogleAnalyticsIntegrationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    clientSecret?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncFrequency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoogleAnalyticsIntegrationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessEntityId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    clientSecret?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncFrequency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type N8nIntegrationCreateInput = {
    id?: string
    webhookUrl: string
    webhookToken: string
    isActive?: boolean
    lastWebhookAt?: Date | string | null
    webhookCount?: number
    lastErrorAt?: Date | string | null
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    businessEntity: BusinessEntityCreateNestedOneWithoutN8nIntegrationsInput
    webhookEvents?: N8nWebhookEventCreateNestedManyWithoutN8nIntegrationInput
  }

  export type N8nIntegrationUncheckedCreateInput = {
    id?: string
    businessEntityId: string
    webhookUrl: string
    webhookToken: string
    isActive?: boolean
    lastWebhookAt?: Date | string | null
    webhookCount?: number
    lastErrorAt?: Date | string | null
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    webhookEvents?: N8nWebhookEventUncheckedCreateNestedManyWithoutN8nIntegrationInput
  }

  export type N8nIntegrationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    webhookUrl?: StringFieldUpdateOperationsInput | string
    webhookToken?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastWebhookAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    webhookCount?: IntFieldUpdateOperationsInput | number
    lastErrorAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessEntity?: BusinessEntityUpdateOneRequiredWithoutN8nIntegrationsNestedInput
    webhookEvents?: N8nWebhookEventUpdateManyWithoutN8nIntegrationNestedInput
  }

  export type N8nIntegrationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessEntityId?: StringFieldUpdateOperationsInput | string
    webhookUrl?: StringFieldUpdateOperationsInput | string
    webhookToken?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastWebhookAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    webhookCount?: IntFieldUpdateOperationsInput | number
    lastErrorAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    webhookEvents?: N8nWebhookEventUncheckedUpdateManyWithoutN8nIntegrationNestedInput
  }

  export type N8nIntegrationCreateManyInput = {
    id?: string
    businessEntityId: string
    webhookUrl: string
    webhookToken: string
    isActive?: boolean
    lastWebhookAt?: Date | string | null
    webhookCount?: number
    lastErrorAt?: Date | string | null
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type N8nIntegrationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    webhookUrl?: StringFieldUpdateOperationsInput | string
    webhookToken?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastWebhookAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    webhookCount?: IntFieldUpdateOperationsInput | number
    lastErrorAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type N8nIntegrationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessEntityId?: StringFieldUpdateOperationsInput | string
    webhookUrl?: StringFieldUpdateOperationsInput | string
    webhookToken?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastWebhookAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    webhookCount?: IntFieldUpdateOperationsInput | number
    lastErrorAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type N8nWebhookEventCreateInput = {
    id?: string
    workflowId: string
    workflowName: string
    executionId: string
    eventType: string
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    n8nIntegration: N8nIntegrationCreateNestedOneWithoutWebhookEventsInput
  }

  export type N8nWebhookEventUncheckedCreateInput = {
    id?: string
    n8nIntegrationId: string
    workflowId: string
    workflowName: string
    executionId: string
    eventType: string
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type N8nWebhookEventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    workflowId?: StringFieldUpdateOperationsInput | string
    workflowName?: StringFieldUpdateOperationsInput | string
    executionId?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    n8nIntegration?: N8nIntegrationUpdateOneRequiredWithoutWebhookEventsNestedInput
  }

  export type N8nWebhookEventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    n8nIntegrationId?: StringFieldUpdateOperationsInput | string
    workflowId?: StringFieldUpdateOperationsInput | string
    workflowName?: StringFieldUpdateOperationsInput | string
    executionId?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type N8nWebhookEventCreateManyInput = {
    id?: string
    n8nIntegrationId: string
    workflowId: string
    workflowName: string
    executionId: string
    eventType: string
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type N8nWebhookEventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    workflowId?: StringFieldUpdateOperationsInput | string
    workflowName?: StringFieldUpdateOperationsInput | string
    executionId?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type N8nWebhookEventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    n8nIntegrationId?: StringFieldUpdateOperationsInput | string
    workflowId?: StringFieldUpdateOperationsInput | string
    workflowName?: StringFieldUpdateOperationsInput | string
    executionId?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BusinessEntityRelationFilter = {
    is?: BusinessEntityWhereInput
    isNot?: BusinessEntityWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    isActive?: SortOrder
    emailVerified?: SortOrder
    emailVerificationToken?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpires?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businessEntityId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    isActive?: SortOrder
    emailVerified?: SortOrder
    emailVerificationToken?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpires?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businessEntityId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    isActive?: SortOrder
    emailVerified?: SortOrder
    emailVerificationToken?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpires?: SortOrder
    lastLoginAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    businessEntityId?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type GoogleAnalyticsIntegrationListRelationFilter = {
    every?: GoogleAnalyticsIntegrationWhereInput
    some?: GoogleAnalyticsIntegrationWhereInput
    none?: GoogleAnalyticsIntegrationWhereInput
  }

  export type N8nIntegrationListRelationFilter = {
    every?: N8nIntegrationWhereInput
    some?: N8nIntegrationWhereInput
    none?: N8nIntegrationWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GoogleAnalyticsIntegrationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type N8nIntegrationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BusinessEntityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    domain?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessEntityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    domain?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BusinessEntityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    domain?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GoogleAnalyticsIntegrationCountOrderByAggregateInput = {
    id?: SortOrder
    businessEntityId?: SortOrder
    propertyId?: SortOrder
    clientId?: SortOrder
    clientSecret?: SortOrder
    refreshToken?: SortOrder
    accessToken?: SortOrder
    accessTokenExpiresAt?: SortOrder
    isActive?: SortOrder
    lastSyncAt?: SortOrder
    syncFrequency?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GoogleAnalyticsIntegrationMaxOrderByAggregateInput = {
    id?: SortOrder
    businessEntityId?: SortOrder
    propertyId?: SortOrder
    clientId?: SortOrder
    clientSecret?: SortOrder
    refreshToken?: SortOrder
    accessToken?: SortOrder
    accessTokenExpiresAt?: SortOrder
    isActive?: SortOrder
    lastSyncAt?: SortOrder
    syncFrequency?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type GoogleAnalyticsIntegrationMinOrderByAggregateInput = {
    id?: SortOrder
    businessEntityId?: SortOrder
    propertyId?: SortOrder
    clientId?: SortOrder
    clientSecret?: SortOrder
    refreshToken?: SortOrder
    accessToken?: SortOrder
    accessTokenExpiresAt?: SortOrder
    isActive?: SortOrder
    lastSyncAt?: SortOrder
    syncFrequency?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type N8nWebhookEventListRelationFilter = {
    every?: N8nWebhookEventWhereInput
    some?: N8nWebhookEventWhereInput
    none?: N8nWebhookEventWhereInput
  }

  export type N8nWebhookEventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type N8nIntegrationCountOrderByAggregateInput = {
    id?: SortOrder
    businessEntityId?: SortOrder
    webhookUrl?: SortOrder
    webhookToken?: SortOrder
    isActive?: SortOrder
    lastWebhookAt?: SortOrder
    webhookCount?: SortOrder
    lastErrorAt?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type N8nIntegrationAvgOrderByAggregateInput = {
    webhookCount?: SortOrder
  }

  export type N8nIntegrationMaxOrderByAggregateInput = {
    id?: SortOrder
    businessEntityId?: SortOrder
    webhookUrl?: SortOrder
    webhookToken?: SortOrder
    isActive?: SortOrder
    lastWebhookAt?: SortOrder
    webhookCount?: SortOrder
    lastErrorAt?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type N8nIntegrationMinOrderByAggregateInput = {
    id?: SortOrder
    businessEntityId?: SortOrder
    webhookUrl?: SortOrder
    webhookToken?: SortOrder
    isActive?: SortOrder
    lastWebhookAt?: SortOrder
    webhookCount?: SortOrder
    lastErrorAt?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type N8nIntegrationSumOrderByAggregateInput = {
    webhookCount?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type N8nIntegrationRelationFilter = {
    is?: N8nIntegrationWhereInput
    isNot?: N8nIntegrationWhereInput
  }

  export type N8nWebhookEventCountOrderByAggregateInput = {
    id?: SortOrder
    n8nIntegrationId?: SortOrder
    workflowId?: SortOrder
    workflowName?: SortOrder
    executionId?: SortOrder
    eventType?: SortOrder
    status?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    duration?: SortOrder
    inputData?: SortOrder
    outputData?: SortOrder
    errorMessage?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
  }

  export type N8nWebhookEventAvgOrderByAggregateInput = {
    duration?: SortOrder
  }

  export type N8nWebhookEventMaxOrderByAggregateInput = {
    id?: SortOrder
    n8nIntegrationId?: SortOrder
    workflowId?: SortOrder
    workflowName?: SortOrder
    executionId?: SortOrder
    eventType?: SortOrder
    status?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    duration?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
  }

  export type N8nWebhookEventMinOrderByAggregateInput = {
    id?: SortOrder
    n8nIntegrationId?: SortOrder
    workflowId?: SortOrder
    workflowName?: SortOrder
    executionId?: SortOrder
    eventType?: SortOrder
    status?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    duration?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
  }

  export type N8nWebhookEventSumOrderByAggregateInput = {
    duration?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type BusinessEntityCreateNestedOneWithoutUsersInput = {
    create?: XOR<BusinessEntityCreateWithoutUsersInput, BusinessEntityUncheckedCreateWithoutUsersInput>
    connectOrCreate?: BusinessEntityCreateOrConnectWithoutUsersInput
    connect?: BusinessEntityWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BusinessEntityUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<BusinessEntityCreateWithoutUsersInput, BusinessEntityUncheckedCreateWithoutUsersInput>
    connectOrCreate?: BusinessEntityCreateOrConnectWithoutUsersInput
    upsert?: BusinessEntityUpsertWithoutUsersInput
    connect?: BusinessEntityWhereUniqueInput
    update?: XOR<XOR<BusinessEntityUpdateToOneWithWhereWithoutUsersInput, BusinessEntityUpdateWithoutUsersInput>, BusinessEntityUncheckedUpdateWithoutUsersInput>
  }

  export type UserCreateNestedManyWithoutBusinessEntityInput = {
    create?: XOR<UserCreateWithoutBusinessEntityInput, UserUncheckedCreateWithoutBusinessEntityInput> | UserCreateWithoutBusinessEntityInput[] | UserUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBusinessEntityInput | UserCreateOrConnectWithoutBusinessEntityInput[]
    createMany?: UserCreateManyBusinessEntityInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type GoogleAnalyticsIntegrationCreateNestedManyWithoutBusinessEntityInput = {
    create?: XOR<GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput, GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput> | GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput[] | GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: GoogleAnalyticsIntegrationCreateOrConnectWithoutBusinessEntityInput | GoogleAnalyticsIntegrationCreateOrConnectWithoutBusinessEntityInput[]
    createMany?: GoogleAnalyticsIntegrationCreateManyBusinessEntityInputEnvelope
    connect?: GoogleAnalyticsIntegrationWhereUniqueInput | GoogleAnalyticsIntegrationWhereUniqueInput[]
  }

  export type N8nIntegrationCreateNestedManyWithoutBusinessEntityInput = {
    create?: XOR<N8nIntegrationCreateWithoutBusinessEntityInput, N8nIntegrationUncheckedCreateWithoutBusinessEntityInput> | N8nIntegrationCreateWithoutBusinessEntityInput[] | N8nIntegrationUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: N8nIntegrationCreateOrConnectWithoutBusinessEntityInput | N8nIntegrationCreateOrConnectWithoutBusinessEntityInput[]
    createMany?: N8nIntegrationCreateManyBusinessEntityInputEnvelope
    connect?: N8nIntegrationWhereUniqueInput | N8nIntegrationWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutBusinessEntityInput = {
    create?: XOR<UserCreateWithoutBusinessEntityInput, UserUncheckedCreateWithoutBusinessEntityInput> | UserCreateWithoutBusinessEntityInput[] | UserUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBusinessEntityInput | UserCreateOrConnectWithoutBusinessEntityInput[]
    createMany?: UserCreateManyBusinessEntityInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type GoogleAnalyticsIntegrationUncheckedCreateNestedManyWithoutBusinessEntityInput = {
    create?: XOR<GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput, GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput> | GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput[] | GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: GoogleAnalyticsIntegrationCreateOrConnectWithoutBusinessEntityInput | GoogleAnalyticsIntegrationCreateOrConnectWithoutBusinessEntityInput[]
    createMany?: GoogleAnalyticsIntegrationCreateManyBusinessEntityInputEnvelope
    connect?: GoogleAnalyticsIntegrationWhereUniqueInput | GoogleAnalyticsIntegrationWhereUniqueInput[]
  }

  export type N8nIntegrationUncheckedCreateNestedManyWithoutBusinessEntityInput = {
    create?: XOR<N8nIntegrationCreateWithoutBusinessEntityInput, N8nIntegrationUncheckedCreateWithoutBusinessEntityInput> | N8nIntegrationCreateWithoutBusinessEntityInput[] | N8nIntegrationUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: N8nIntegrationCreateOrConnectWithoutBusinessEntityInput | N8nIntegrationCreateOrConnectWithoutBusinessEntityInput[]
    createMany?: N8nIntegrationCreateManyBusinessEntityInputEnvelope
    connect?: N8nIntegrationWhereUniqueInput | N8nIntegrationWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutBusinessEntityNestedInput = {
    create?: XOR<UserCreateWithoutBusinessEntityInput, UserUncheckedCreateWithoutBusinessEntityInput> | UserCreateWithoutBusinessEntityInput[] | UserUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBusinessEntityInput | UserCreateOrConnectWithoutBusinessEntityInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutBusinessEntityInput | UserUpsertWithWhereUniqueWithoutBusinessEntityInput[]
    createMany?: UserCreateManyBusinessEntityInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutBusinessEntityInput | UserUpdateWithWhereUniqueWithoutBusinessEntityInput[]
    updateMany?: UserUpdateManyWithWhereWithoutBusinessEntityInput | UserUpdateManyWithWhereWithoutBusinessEntityInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type GoogleAnalyticsIntegrationUpdateManyWithoutBusinessEntityNestedInput = {
    create?: XOR<GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput, GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput> | GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput[] | GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: GoogleAnalyticsIntegrationCreateOrConnectWithoutBusinessEntityInput | GoogleAnalyticsIntegrationCreateOrConnectWithoutBusinessEntityInput[]
    upsert?: GoogleAnalyticsIntegrationUpsertWithWhereUniqueWithoutBusinessEntityInput | GoogleAnalyticsIntegrationUpsertWithWhereUniqueWithoutBusinessEntityInput[]
    createMany?: GoogleAnalyticsIntegrationCreateManyBusinessEntityInputEnvelope
    set?: GoogleAnalyticsIntegrationWhereUniqueInput | GoogleAnalyticsIntegrationWhereUniqueInput[]
    disconnect?: GoogleAnalyticsIntegrationWhereUniqueInput | GoogleAnalyticsIntegrationWhereUniqueInput[]
    delete?: GoogleAnalyticsIntegrationWhereUniqueInput | GoogleAnalyticsIntegrationWhereUniqueInput[]
    connect?: GoogleAnalyticsIntegrationWhereUniqueInput | GoogleAnalyticsIntegrationWhereUniqueInput[]
    update?: GoogleAnalyticsIntegrationUpdateWithWhereUniqueWithoutBusinessEntityInput | GoogleAnalyticsIntegrationUpdateWithWhereUniqueWithoutBusinessEntityInput[]
    updateMany?: GoogleAnalyticsIntegrationUpdateManyWithWhereWithoutBusinessEntityInput | GoogleAnalyticsIntegrationUpdateManyWithWhereWithoutBusinessEntityInput[]
    deleteMany?: GoogleAnalyticsIntegrationScalarWhereInput | GoogleAnalyticsIntegrationScalarWhereInput[]
  }

  export type N8nIntegrationUpdateManyWithoutBusinessEntityNestedInput = {
    create?: XOR<N8nIntegrationCreateWithoutBusinessEntityInput, N8nIntegrationUncheckedCreateWithoutBusinessEntityInput> | N8nIntegrationCreateWithoutBusinessEntityInput[] | N8nIntegrationUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: N8nIntegrationCreateOrConnectWithoutBusinessEntityInput | N8nIntegrationCreateOrConnectWithoutBusinessEntityInput[]
    upsert?: N8nIntegrationUpsertWithWhereUniqueWithoutBusinessEntityInput | N8nIntegrationUpsertWithWhereUniqueWithoutBusinessEntityInput[]
    createMany?: N8nIntegrationCreateManyBusinessEntityInputEnvelope
    set?: N8nIntegrationWhereUniqueInput | N8nIntegrationWhereUniqueInput[]
    disconnect?: N8nIntegrationWhereUniqueInput | N8nIntegrationWhereUniqueInput[]
    delete?: N8nIntegrationWhereUniqueInput | N8nIntegrationWhereUniqueInput[]
    connect?: N8nIntegrationWhereUniqueInput | N8nIntegrationWhereUniqueInput[]
    update?: N8nIntegrationUpdateWithWhereUniqueWithoutBusinessEntityInput | N8nIntegrationUpdateWithWhereUniqueWithoutBusinessEntityInput[]
    updateMany?: N8nIntegrationUpdateManyWithWhereWithoutBusinessEntityInput | N8nIntegrationUpdateManyWithWhereWithoutBusinessEntityInput[]
    deleteMany?: N8nIntegrationScalarWhereInput | N8nIntegrationScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutBusinessEntityNestedInput = {
    create?: XOR<UserCreateWithoutBusinessEntityInput, UserUncheckedCreateWithoutBusinessEntityInput> | UserCreateWithoutBusinessEntityInput[] | UserUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBusinessEntityInput | UserCreateOrConnectWithoutBusinessEntityInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutBusinessEntityInput | UserUpsertWithWhereUniqueWithoutBusinessEntityInput[]
    createMany?: UserCreateManyBusinessEntityInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutBusinessEntityInput | UserUpdateWithWhereUniqueWithoutBusinessEntityInput[]
    updateMany?: UserUpdateManyWithWhereWithoutBusinessEntityInput | UserUpdateManyWithWhereWithoutBusinessEntityInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type GoogleAnalyticsIntegrationUncheckedUpdateManyWithoutBusinessEntityNestedInput = {
    create?: XOR<GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput, GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput> | GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput[] | GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: GoogleAnalyticsIntegrationCreateOrConnectWithoutBusinessEntityInput | GoogleAnalyticsIntegrationCreateOrConnectWithoutBusinessEntityInput[]
    upsert?: GoogleAnalyticsIntegrationUpsertWithWhereUniqueWithoutBusinessEntityInput | GoogleAnalyticsIntegrationUpsertWithWhereUniqueWithoutBusinessEntityInput[]
    createMany?: GoogleAnalyticsIntegrationCreateManyBusinessEntityInputEnvelope
    set?: GoogleAnalyticsIntegrationWhereUniqueInput | GoogleAnalyticsIntegrationWhereUniqueInput[]
    disconnect?: GoogleAnalyticsIntegrationWhereUniqueInput | GoogleAnalyticsIntegrationWhereUniqueInput[]
    delete?: GoogleAnalyticsIntegrationWhereUniqueInput | GoogleAnalyticsIntegrationWhereUniqueInput[]
    connect?: GoogleAnalyticsIntegrationWhereUniqueInput | GoogleAnalyticsIntegrationWhereUniqueInput[]
    update?: GoogleAnalyticsIntegrationUpdateWithWhereUniqueWithoutBusinessEntityInput | GoogleAnalyticsIntegrationUpdateWithWhereUniqueWithoutBusinessEntityInput[]
    updateMany?: GoogleAnalyticsIntegrationUpdateManyWithWhereWithoutBusinessEntityInput | GoogleAnalyticsIntegrationUpdateManyWithWhereWithoutBusinessEntityInput[]
    deleteMany?: GoogleAnalyticsIntegrationScalarWhereInput | GoogleAnalyticsIntegrationScalarWhereInput[]
  }

  export type N8nIntegrationUncheckedUpdateManyWithoutBusinessEntityNestedInput = {
    create?: XOR<N8nIntegrationCreateWithoutBusinessEntityInput, N8nIntegrationUncheckedCreateWithoutBusinessEntityInput> | N8nIntegrationCreateWithoutBusinessEntityInput[] | N8nIntegrationUncheckedCreateWithoutBusinessEntityInput[]
    connectOrCreate?: N8nIntegrationCreateOrConnectWithoutBusinessEntityInput | N8nIntegrationCreateOrConnectWithoutBusinessEntityInput[]
    upsert?: N8nIntegrationUpsertWithWhereUniqueWithoutBusinessEntityInput | N8nIntegrationUpsertWithWhereUniqueWithoutBusinessEntityInput[]
    createMany?: N8nIntegrationCreateManyBusinessEntityInputEnvelope
    set?: N8nIntegrationWhereUniqueInput | N8nIntegrationWhereUniqueInput[]
    disconnect?: N8nIntegrationWhereUniqueInput | N8nIntegrationWhereUniqueInput[]
    delete?: N8nIntegrationWhereUniqueInput | N8nIntegrationWhereUniqueInput[]
    connect?: N8nIntegrationWhereUniqueInput | N8nIntegrationWhereUniqueInput[]
    update?: N8nIntegrationUpdateWithWhereUniqueWithoutBusinessEntityInput | N8nIntegrationUpdateWithWhereUniqueWithoutBusinessEntityInput[]
    updateMany?: N8nIntegrationUpdateManyWithWhereWithoutBusinessEntityInput | N8nIntegrationUpdateManyWithWhereWithoutBusinessEntityInput[]
    deleteMany?: N8nIntegrationScalarWhereInput | N8nIntegrationScalarWhereInput[]
  }

  export type BusinessEntityCreateNestedOneWithoutGoogleAnalyticsInput = {
    create?: XOR<BusinessEntityCreateWithoutGoogleAnalyticsInput, BusinessEntityUncheckedCreateWithoutGoogleAnalyticsInput>
    connectOrCreate?: BusinessEntityCreateOrConnectWithoutGoogleAnalyticsInput
    connect?: BusinessEntityWhereUniqueInput
  }

  export type BusinessEntityUpdateOneRequiredWithoutGoogleAnalyticsNestedInput = {
    create?: XOR<BusinessEntityCreateWithoutGoogleAnalyticsInput, BusinessEntityUncheckedCreateWithoutGoogleAnalyticsInput>
    connectOrCreate?: BusinessEntityCreateOrConnectWithoutGoogleAnalyticsInput
    upsert?: BusinessEntityUpsertWithoutGoogleAnalyticsInput
    connect?: BusinessEntityWhereUniqueInput
    update?: XOR<XOR<BusinessEntityUpdateToOneWithWhereWithoutGoogleAnalyticsInput, BusinessEntityUpdateWithoutGoogleAnalyticsInput>, BusinessEntityUncheckedUpdateWithoutGoogleAnalyticsInput>
  }

  export type BusinessEntityCreateNestedOneWithoutN8nIntegrationsInput = {
    create?: XOR<BusinessEntityCreateWithoutN8nIntegrationsInput, BusinessEntityUncheckedCreateWithoutN8nIntegrationsInput>
    connectOrCreate?: BusinessEntityCreateOrConnectWithoutN8nIntegrationsInput
    connect?: BusinessEntityWhereUniqueInput
  }

  export type N8nWebhookEventCreateNestedManyWithoutN8nIntegrationInput = {
    create?: XOR<N8nWebhookEventCreateWithoutN8nIntegrationInput, N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput> | N8nWebhookEventCreateWithoutN8nIntegrationInput[] | N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput[]
    connectOrCreate?: N8nWebhookEventCreateOrConnectWithoutN8nIntegrationInput | N8nWebhookEventCreateOrConnectWithoutN8nIntegrationInput[]
    createMany?: N8nWebhookEventCreateManyN8nIntegrationInputEnvelope
    connect?: N8nWebhookEventWhereUniqueInput | N8nWebhookEventWhereUniqueInput[]
  }

  export type N8nWebhookEventUncheckedCreateNestedManyWithoutN8nIntegrationInput = {
    create?: XOR<N8nWebhookEventCreateWithoutN8nIntegrationInput, N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput> | N8nWebhookEventCreateWithoutN8nIntegrationInput[] | N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput[]
    connectOrCreate?: N8nWebhookEventCreateOrConnectWithoutN8nIntegrationInput | N8nWebhookEventCreateOrConnectWithoutN8nIntegrationInput[]
    createMany?: N8nWebhookEventCreateManyN8nIntegrationInputEnvelope
    connect?: N8nWebhookEventWhereUniqueInput | N8nWebhookEventWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BusinessEntityUpdateOneRequiredWithoutN8nIntegrationsNestedInput = {
    create?: XOR<BusinessEntityCreateWithoutN8nIntegrationsInput, BusinessEntityUncheckedCreateWithoutN8nIntegrationsInput>
    connectOrCreate?: BusinessEntityCreateOrConnectWithoutN8nIntegrationsInput
    upsert?: BusinessEntityUpsertWithoutN8nIntegrationsInput
    connect?: BusinessEntityWhereUniqueInput
    update?: XOR<XOR<BusinessEntityUpdateToOneWithWhereWithoutN8nIntegrationsInput, BusinessEntityUpdateWithoutN8nIntegrationsInput>, BusinessEntityUncheckedUpdateWithoutN8nIntegrationsInput>
  }

  export type N8nWebhookEventUpdateManyWithoutN8nIntegrationNestedInput = {
    create?: XOR<N8nWebhookEventCreateWithoutN8nIntegrationInput, N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput> | N8nWebhookEventCreateWithoutN8nIntegrationInput[] | N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput[]
    connectOrCreate?: N8nWebhookEventCreateOrConnectWithoutN8nIntegrationInput | N8nWebhookEventCreateOrConnectWithoutN8nIntegrationInput[]
    upsert?: N8nWebhookEventUpsertWithWhereUniqueWithoutN8nIntegrationInput | N8nWebhookEventUpsertWithWhereUniqueWithoutN8nIntegrationInput[]
    createMany?: N8nWebhookEventCreateManyN8nIntegrationInputEnvelope
    set?: N8nWebhookEventWhereUniqueInput | N8nWebhookEventWhereUniqueInput[]
    disconnect?: N8nWebhookEventWhereUniqueInput | N8nWebhookEventWhereUniqueInput[]
    delete?: N8nWebhookEventWhereUniqueInput | N8nWebhookEventWhereUniqueInput[]
    connect?: N8nWebhookEventWhereUniqueInput | N8nWebhookEventWhereUniqueInput[]
    update?: N8nWebhookEventUpdateWithWhereUniqueWithoutN8nIntegrationInput | N8nWebhookEventUpdateWithWhereUniqueWithoutN8nIntegrationInput[]
    updateMany?: N8nWebhookEventUpdateManyWithWhereWithoutN8nIntegrationInput | N8nWebhookEventUpdateManyWithWhereWithoutN8nIntegrationInput[]
    deleteMany?: N8nWebhookEventScalarWhereInput | N8nWebhookEventScalarWhereInput[]
  }

  export type N8nWebhookEventUncheckedUpdateManyWithoutN8nIntegrationNestedInput = {
    create?: XOR<N8nWebhookEventCreateWithoutN8nIntegrationInput, N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput> | N8nWebhookEventCreateWithoutN8nIntegrationInput[] | N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput[]
    connectOrCreate?: N8nWebhookEventCreateOrConnectWithoutN8nIntegrationInput | N8nWebhookEventCreateOrConnectWithoutN8nIntegrationInput[]
    upsert?: N8nWebhookEventUpsertWithWhereUniqueWithoutN8nIntegrationInput | N8nWebhookEventUpsertWithWhereUniqueWithoutN8nIntegrationInput[]
    createMany?: N8nWebhookEventCreateManyN8nIntegrationInputEnvelope
    set?: N8nWebhookEventWhereUniqueInput | N8nWebhookEventWhereUniqueInput[]
    disconnect?: N8nWebhookEventWhereUniqueInput | N8nWebhookEventWhereUniqueInput[]
    delete?: N8nWebhookEventWhereUniqueInput | N8nWebhookEventWhereUniqueInput[]
    connect?: N8nWebhookEventWhereUniqueInput | N8nWebhookEventWhereUniqueInput[]
    update?: N8nWebhookEventUpdateWithWhereUniqueWithoutN8nIntegrationInput | N8nWebhookEventUpdateWithWhereUniqueWithoutN8nIntegrationInput[]
    updateMany?: N8nWebhookEventUpdateManyWithWhereWithoutN8nIntegrationInput | N8nWebhookEventUpdateManyWithWhereWithoutN8nIntegrationInput[]
    deleteMany?: N8nWebhookEventScalarWhereInput | N8nWebhookEventScalarWhereInput[]
  }

  export type N8nIntegrationCreateNestedOneWithoutWebhookEventsInput = {
    create?: XOR<N8nIntegrationCreateWithoutWebhookEventsInput, N8nIntegrationUncheckedCreateWithoutWebhookEventsInput>
    connectOrCreate?: N8nIntegrationCreateOrConnectWithoutWebhookEventsInput
    connect?: N8nIntegrationWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type N8nIntegrationUpdateOneRequiredWithoutWebhookEventsNestedInput = {
    create?: XOR<N8nIntegrationCreateWithoutWebhookEventsInput, N8nIntegrationUncheckedCreateWithoutWebhookEventsInput>
    connectOrCreate?: N8nIntegrationCreateOrConnectWithoutWebhookEventsInput
    upsert?: N8nIntegrationUpsertWithoutWebhookEventsInput
    connect?: N8nIntegrationWhereUniqueInput
    update?: XOR<XOR<N8nIntegrationUpdateToOneWithWhereWithoutWebhookEventsInput, N8nIntegrationUpdateWithoutWebhookEventsInput>, N8nIntegrationUncheckedUpdateWithoutWebhookEventsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type BusinessEntityCreateWithoutUsersInput = {
    id?: string
    name: string
    description?: string | null
    domain?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    googleAnalytics?: GoogleAnalyticsIntegrationCreateNestedManyWithoutBusinessEntityInput
    n8nIntegrations?: N8nIntegrationCreateNestedManyWithoutBusinessEntityInput
  }

  export type BusinessEntityUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    description?: string | null
    domain?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    googleAnalytics?: GoogleAnalyticsIntegrationUncheckedCreateNestedManyWithoutBusinessEntityInput
    n8nIntegrations?: N8nIntegrationUncheckedCreateNestedManyWithoutBusinessEntityInput
  }

  export type BusinessEntityCreateOrConnectWithoutUsersInput = {
    where: BusinessEntityWhereUniqueInput
    create: XOR<BusinessEntityCreateWithoutUsersInput, BusinessEntityUncheckedCreateWithoutUsersInput>
  }

  export type BusinessEntityUpsertWithoutUsersInput = {
    update: XOR<BusinessEntityUpdateWithoutUsersInput, BusinessEntityUncheckedUpdateWithoutUsersInput>
    create: XOR<BusinessEntityCreateWithoutUsersInput, BusinessEntityUncheckedCreateWithoutUsersInput>
    where?: BusinessEntityWhereInput
  }

  export type BusinessEntityUpdateToOneWithWhereWithoutUsersInput = {
    where?: BusinessEntityWhereInput
    data: XOR<BusinessEntityUpdateWithoutUsersInput, BusinessEntityUncheckedUpdateWithoutUsersInput>
  }

  export type BusinessEntityUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    googleAnalytics?: GoogleAnalyticsIntegrationUpdateManyWithoutBusinessEntityNestedInput
    n8nIntegrations?: N8nIntegrationUpdateManyWithoutBusinessEntityNestedInput
  }

  export type BusinessEntityUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    googleAnalytics?: GoogleAnalyticsIntegrationUncheckedUpdateManyWithoutBusinessEntityNestedInput
    n8nIntegrations?: N8nIntegrationUncheckedUpdateManyWithoutBusinessEntityNestedInput
  }

  export type UserCreateWithoutBusinessEntityInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    isActive?: boolean
    emailVerified?: boolean
    emailVerificationToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUncheckedCreateWithoutBusinessEntityInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    isActive?: boolean
    emailVerified?: boolean
    emailVerificationToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCreateOrConnectWithoutBusinessEntityInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBusinessEntityInput, UserUncheckedCreateWithoutBusinessEntityInput>
  }

  export type UserCreateManyBusinessEntityInputEnvelope = {
    data: UserCreateManyBusinessEntityInput | UserCreateManyBusinessEntityInput[]
    skipDuplicates?: boolean
  }

  export type GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput = {
    id?: string
    propertyId: string
    clientId: string
    clientSecret: string
    refreshToken?: string | null
    accessToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    isActive?: boolean
    lastSyncAt?: Date | string | null
    syncFrequency?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput = {
    id?: string
    propertyId: string
    clientId: string
    clientSecret: string
    refreshToken?: string | null
    accessToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    isActive?: boolean
    lastSyncAt?: Date | string | null
    syncFrequency?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoogleAnalyticsIntegrationCreateOrConnectWithoutBusinessEntityInput = {
    where: GoogleAnalyticsIntegrationWhereUniqueInput
    create: XOR<GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput, GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput>
  }

  export type GoogleAnalyticsIntegrationCreateManyBusinessEntityInputEnvelope = {
    data: GoogleAnalyticsIntegrationCreateManyBusinessEntityInput | GoogleAnalyticsIntegrationCreateManyBusinessEntityInput[]
    skipDuplicates?: boolean
  }

  export type N8nIntegrationCreateWithoutBusinessEntityInput = {
    id?: string
    webhookUrl: string
    webhookToken: string
    isActive?: boolean
    lastWebhookAt?: Date | string | null
    webhookCount?: number
    lastErrorAt?: Date | string | null
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    webhookEvents?: N8nWebhookEventCreateNestedManyWithoutN8nIntegrationInput
  }

  export type N8nIntegrationUncheckedCreateWithoutBusinessEntityInput = {
    id?: string
    webhookUrl: string
    webhookToken: string
    isActive?: boolean
    lastWebhookAt?: Date | string | null
    webhookCount?: number
    lastErrorAt?: Date | string | null
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    webhookEvents?: N8nWebhookEventUncheckedCreateNestedManyWithoutN8nIntegrationInput
  }

  export type N8nIntegrationCreateOrConnectWithoutBusinessEntityInput = {
    where: N8nIntegrationWhereUniqueInput
    create: XOR<N8nIntegrationCreateWithoutBusinessEntityInput, N8nIntegrationUncheckedCreateWithoutBusinessEntityInput>
  }

  export type N8nIntegrationCreateManyBusinessEntityInputEnvelope = {
    data: N8nIntegrationCreateManyBusinessEntityInput | N8nIntegrationCreateManyBusinessEntityInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutBusinessEntityInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutBusinessEntityInput, UserUncheckedUpdateWithoutBusinessEntityInput>
    create: XOR<UserCreateWithoutBusinessEntityInput, UserUncheckedCreateWithoutBusinessEntityInput>
  }

  export type UserUpdateWithWhereUniqueWithoutBusinessEntityInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutBusinessEntityInput, UserUncheckedUpdateWithoutBusinessEntityInput>
  }

  export type UserUpdateManyWithWhereWithoutBusinessEntityInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutBusinessEntityInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerificationToken?: StringNullableFilter<"User"> | string | null
    passwordResetToken?: StringNullableFilter<"User"> | string | null
    passwordResetExpires?: DateTimeNullableFilter<"User"> | Date | string | null
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    businessEntityId?: StringFilter<"User"> | string
  }

  export type GoogleAnalyticsIntegrationUpsertWithWhereUniqueWithoutBusinessEntityInput = {
    where: GoogleAnalyticsIntegrationWhereUniqueInput
    update: XOR<GoogleAnalyticsIntegrationUpdateWithoutBusinessEntityInput, GoogleAnalyticsIntegrationUncheckedUpdateWithoutBusinessEntityInput>
    create: XOR<GoogleAnalyticsIntegrationCreateWithoutBusinessEntityInput, GoogleAnalyticsIntegrationUncheckedCreateWithoutBusinessEntityInput>
  }

  export type GoogleAnalyticsIntegrationUpdateWithWhereUniqueWithoutBusinessEntityInput = {
    where: GoogleAnalyticsIntegrationWhereUniqueInput
    data: XOR<GoogleAnalyticsIntegrationUpdateWithoutBusinessEntityInput, GoogleAnalyticsIntegrationUncheckedUpdateWithoutBusinessEntityInput>
  }

  export type GoogleAnalyticsIntegrationUpdateManyWithWhereWithoutBusinessEntityInput = {
    where: GoogleAnalyticsIntegrationScalarWhereInput
    data: XOR<GoogleAnalyticsIntegrationUpdateManyMutationInput, GoogleAnalyticsIntegrationUncheckedUpdateManyWithoutBusinessEntityInput>
  }

  export type GoogleAnalyticsIntegrationScalarWhereInput = {
    AND?: GoogleAnalyticsIntegrationScalarWhereInput | GoogleAnalyticsIntegrationScalarWhereInput[]
    OR?: GoogleAnalyticsIntegrationScalarWhereInput[]
    NOT?: GoogleAnalyticsIntegrationScalarWhereInput | GoogleAnalyticsIntegrationScalarWhereInput[]
    id?: StringFilter<"GoogleAnalyticsIntegration"> | string
    businessEntityId?: StringFilter<"GoogleAnalyticsIntegration"> | string
    propertyId?: StringFilter<"GoogleAnalyticsIntegration"> | string
    clientId?: StringFilter<"GoogleAnalyticsIntegration"> | string
    clientSecret?: StringFilter<"GoogleAnalyticsIntegration"> | string
    refreshToken?: StringNullableFilter<"GoogleAnalyticsIntegration"> | string | null
    accessToken?: StringNullableFilter<"GoogleAnalyticsIntegration"> | string | null
    accessTokenExpiresAt?: DateTimeNullableFilter<"GoogleAnalyticsIntegration"> | Date | string | null
    isActive?: BoolFilter<"GoogleAnalyticsIntegration"> | boolean
    lastSyncAt?: DateTimeNullableFilter<"GoogleAnalyticsIntegration"> | Date | string | null
    syncFrequency?: StringFilter<"GoogleAnalyticsIntegration"> | string
    createdAt?: DateTimeFilter<"GoogleAnalyticsIntegration"> | Date | string
    updatedAt?: DateTimeFilter<"GoogleAnalyticsIntegration"> | Date | string
  }

  export type N8nIntegrationUpsertWithWhereUniqueWithoutBusinessEntityInput = {
    where: N8nIntegrationWhereUniqueInput
    update: XOR<N8nIntegrationUpdateWithoutBusinessEntityInput, N8nIntegrationUncheckedUpdateWithoutBusinessEntityInput>
    create: XOR<N8nIntegrationCreateWithoutBusinessEntityInput, N8nIntegrationUncheckedCreateWithoutBusinessEntityInput>
  }

  export type N8nIntegrationUpdateWithWhereUniqueWithoutBusinessEntityInput = {
    where: N8nIntegrationWhereUniqueInput
    data: XOR<N8nIntegrationUpdateWithoutBusinessEntityInput, N8nIntegrationUncheckedUpdateWithoutBusinessEntityInput>
  }

  export type N8nIntegrationUpdateManyWithWhereWithoutBusinessEntityInput = {
    where: N8nIntegrationScalarWhereInput
    data: XOR<N8nIntegrationUpdateManyMutationInput, N8nIntegrationUncheckedUpdateManyWithoutBusinessEntityInput>
  }

  export type N8nIntegrationScalarWhereInput = {
    AND?: N8nIntegrationScalarWhereInput | N8nIntegrationScalarWhereInput[]
    OR?: N8nIntegrationScalarWhereInput[]
    NOT?: N8nIntegrationScalarWhereInput | N8nIntegrationScalarWhereInput[]
    id?: StringFilter<"N8nIntegration"> | string
    businessEntityId?: StringFilter<"N8nIntegration"> | string
    webhookUrl?: StringFilter<"N8nIntegration"> | string
    webhookToken?: StringFilter<"N8nIntegration"> | string
    isActive?: BoolFilter<"N8nIntegration"> | boolean
    lastWebhookAt?: DateTimeNullableFilter<"N8nIntegration"> | Date | string | null
    webhookCount?: IntFilter<"N8nIntegration"> | number
    lastErrorAt?: DateTimeNullableFilter<"N8nIntegration"> | Date | string | null
    errorMessage?: StringNullableFilter<"N8nIntegration"> | string | null
    createdAt?: DateTimeFilter<"N8nIntegration"> | Date | string
    updatedAt?: DateTimeFilter<"N8nIntegration"> | Date | string
  }

  export type BusinessEntityCreateWithoutGoogleAnalyticsInput = {
    id?: string
    name: string
    description?: string | null
    domain?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutBusinessEntityInput
    n8nIntegrations?: N8nIntegrationCreateNestedManyWithoutBusinessEntityInput
  }

  export type BusinessEntityUncheckedCreateWithoutGoogleAnalyticsInput = {
    id?: string
    name: string
    description?: string | null
    domain?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutBusinessEntityInput
    n8nIntegrations?: N8nIntegrationUncheckedCreateNestedManyWithoutBusinessEntityInput
  }

  export type BusinessEntityCreateOrConnectWithoutGoogleAnalyticsInput = {
    where: BusinessEntityWhereUniqueInput
    create: XOR<BusinessEntityCreateWithoutGoogleAnalyticsInput, BusinessEntityUncheckedCreateWithoutGoogleAnalyticsInput>
  }

  export type BusinessEntityUpsertWithoutGoogleAnalyticsInput = {
    update: XOR<BusinessEntityUpdateWithoutGoogleAnalyticsInput, BusinessEntityUncheckedUpdateWithoutGoogleAnalyticsInput>
    create: XOR<BusinessEntityCreateWithoutGoogleAnalyticsInput, BusinessEntityUncheckedCreateWithoutGoogleAnalyticsInput>
    where?: BusinessEntityWhereInput
  }

  export type BusinessEntityUpdateToOneWithWhereWithoutGoogleAnalyticsInput = {
    where?: BusinessEntityWhereInput
    data: XOR<BusinessEntityUpdateWithoutGoogleAnalyticsInput, BusinessEntityUncheckedUpdateWithoutGoogleAnalyticsInput>
  }

  export type BusinessEntityUpdateWithoutGoogleAnalyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutBusinessEntityNestedInput
    n8nIntegrations?: N8nIntegrationUpdateManyWithoutBusinessEntityNestedInput
  }

  export type BusinessEntityUncheckedUpdateWithoutGoogleAnalyticsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutBusinessEntityNestedInput
    n8nIntegrations?: N8nIntegrationUncheckedUpdateManyWithoutBusinessEntityNestedInput
  }

  export type BusinessEntityCreateWithoutN8nIntegrationsInput = {
    id?: string
    name: string
    description?: string | null
    domain?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutBusinessEntityInput
    googleAnalytics?: GoogleAnalyticsIntegrationCreateNestedManyWithoutBusinessEntityInput
  }

  export type BusinessEntityUncheckedCreateWithoutN8nIntegrationsInput = {
    id?: string
    name: string
    description?: string | null
    domain?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutBusinessEntityInput
    googleAnalytics?: GoogleAnalyticsIntegrationUncheckedCreateNestedManyWithoutBusinessEntityInput
  }

  export type BusinessEntityCreateOrConnectWithoutN8nIntegrationsInput = {
    where: BusinessEntityWhereUniqueInput
    create: XOR<BusinessEntityCreateWithoutN8nIntegrationsInput, BusinessEntityUncheckedCreateWithoutN8nIntegrationsInput>
  }

  export type N8nWebhookEventCreateWithoutN8nIntegrationInput = {
    id?: string
    workflowId: string
    workflowName: string
    executionId: string
    eventType: string
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput = {
    id?: string
    workflowId: string
    workflowName: string
    executionId: string
    eventType: string
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type N8nWebhookEventCreateOrConnectWithoutN8nIntegrationInput = {
    where: N8nWebhookEventWhereUniqueInput
    create: XOR<N8nWebhookEventCreateWithoutN8nIntegrationInput, N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput>
  }

  export type N8nWebhookEventCreateManyN8nIntegrationInputEnvelope = {
    data: N8nWebhookEventCreateManyN8nIntegrationInput | N8nWebhookEventCreateManyN8nIntegrationInput[]
    skipDuplicates?: boolean
  }

  export type BusinessEntityUpsertWithoutN8nIntegrationsInput = {
    update: XOR<BusinessEntityUpdateWithoutN8nIntegrationsInput, BusinessEntityUncheckedUpdateWithoutN8nIntegrationsInput>
    create: XOR<BusinessEntityCreateWithoutN8nIntegrationsInput, BusinessEntityUncheckedCreateWithoutN8nIntegrationsInput>
    where?: BusinessEntityWhereInput
  }

  export type BusinessEntityUpdateToOneWithWhereWithoutN8nIntegrationsInput = {
    where?: BusinessEntityWhereInput
    data: XOR<BusinessEntityUpdateWithoutN8nIntegrationsInput, BusinessEntityUncheckedUpdateWithoutN8nIntegrationsInput>
  }

  export type BusinessEntityUpdateWithoutN8nIntegrationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutBusinessEntityNestedInput
    googleAnalytics?: GoogleAnalyticsIntegrationUpdateManyWithoutBusinessEntityNestedInput
  }

  export type BusinessEntityUncheckedUpdateWithoutN8nIntegrationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutBusinessEntityNestedInput
    googleAnalytics?: GoogleAnalyticsIntegrationUncheckedUpdateManyWithoutBusinessEntityNestedInput
  }

  export type N8nWebhookEventUpsertWithWhereUniqueWithoutN8nIntegrationInput = {
    where: N8nWebhookEventWhereUniqueInput
    update: XOR<N8nWebhookEventUpdateWithoutN8nIntegrationInput, N8nWebhookEventUncheckedUpdateWithoutN8nIntegrationInput>
    create: XOR<N8nWebhookEventCreateWithoutN8nIntegrationInput, N8nWebhookEventUncheckedCreateWithoutN8nIntegrationInput>
  }

  export type N8nWebhookEventUpdateWithWhereUniqueWithoutN8nIntegrationInput = {
    where: N8nWebhookEventWhereUniqueInput
    data: XOR<N8nWebhookEventUpdateWithoutN8nIntegrationInput, N8nWebhookEventUncheckedUpdateWithoutN8nIntegrationInput>
  }

  export type N8nWebhookEventUpdateManyWithWhereWithoutN8nIntegrationInput = {
    where: N8nWebhookEventScalarWhereInput
    data: XOR<N8nWebhookEventUpdateManyMutationInput, N8nWebhookEventUncheckedUpdateManyWithoutN8nIntegrationInput>
  }

  export type N8nWebhookEventScalarWhereInput = {
    AND?: N8nWebhookEventScalarWhereInput | N8nWebhookEventScalarWhereInput[]
    OR?: N8nWebhookEventScalarWhereInput[]
    NOT?: N8nWebhookEventScalarWhereInput | N8nWebhookEventScalarWhereInput[]
    id?: StringFilter<"N8nWebhookEvent"> | string
    n8nIntegrationId?: StringFilter<"N8nWebhookEvent"> | string
    workflowId?: StringFilter<"N8nWebhookEvent"> | string
    workflowName?: StringFilter<"N8nWebhookEvent"> | string
    executionId?: StringFilter<"N8nWebhookEvent"> | string
    eventType?: StringFilter<"N8nWebhookEvent"> | string
    status?: StringFilter<"N8nWebhookEvent"> | string
    startTime?: DateTimeFilter<"N8nWebhookEvent"> | Date | string
    endTime?: DateTimeNullableFilter<"N8nWebhookEvent"> | Date | string | null
    duration?: IntNullableFilter<"N8nWebhookEvent"> | number | null
    inputData?: JsonFilter<"N8nWebhookEvent">
    outputData?: JsonFilter<"N8nWebhookEvent">
    errorMessage?: StringNullableFilter<"N8nWebhookEvent"> | string | null
    metadata?: JsonFilter<"N8nWebhookEvent">
    createdAt?: DateTimeFilter<"N8nWebhookEvent"> | Date | string
  }

  export type N8nIntegrationCreateWithoutWebhookEventsInput = {
    id?: string
    webhookUrl: string
    webhookToken: string
    isActive?: boolean
    lastWebhookAt?: Date | string | null
    webhookCount?: number
    lastErrorAt?: Date | string | null
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    businessEntity: BusinessEntityCreateNestedOneWithoutN8nIntegrationsInput
  }

  export type N8nIntegrationUncheckedCreateWithoutWebhookEventsInput = {
    id?: string
    businessEntityId: string
    webhookUrl: string
    webhookToken: string
    isActive?: boolean
    lastWebhookAt?: Date | string | null
    webhookCount?: number
    lastErrorAt?: Date | string | null
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type N8nIntegrationCreateOrConnectWithoutWebhookEventsInput = {
    where: N8nIntegrationWhereUniqueInput
    create: XOR<N8nIntegrationCreateWithoutWebhookEventsInput, N8nIntegrationUncheckedCreateWithoutWebhookEventsInput>
  }

  export type N8nIntegrationUpsertWithoutWebhookEventsInput = {
    update: XOR<N8nIntegrationUpdateWithoutWebhookEventsInput, N8nIntegrationUncheckedUpdateWithoutWebhookEventsInput>
    create: XOR<N8nIntegrationCreateWithoutWebhookEventsInput, N8nIntegrationUncheckedCreateWithoutWebhookEventsInput>
    where?: N8nIntegrationWhereInput
  }

  export type N8nIntegrationUpdateToOneWithWhereWithoutWebhookEventsInput = {
    where?: N8nIntegrationWhereInput
    data: XOR<N8nIntegrationUpdateWithoutWebhookEventsInput, N8nIntegrationUncheckedUpdateWithoutWebhookEventsInput>
  }

  export type N8nIntegrationUpdateWithoutWebhookEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    webhookUrl?: StringFieldUpdateOperationsInput | string
    webhookToken?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastWebhookAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    webhookCount?: IntFieldUpdateOperationsInput | number
    lastErrorAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    businessEntity?: BusinessEntityUpdateOneRequiredWithoutN8nIntegrationsNestedInput
  }

  export type N8nIntegrationUncheckedUpdateWithoutWebhookEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    businessEntityId?: StringFieldUpdateOperationsInput | string
    webhookUrl?: StringFieldUpdateOperationsInput | string
    webhookToken?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastWebhookAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    webhookCount?: IntFieldUpdateOperationsInput | number
    lastErrorAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyBusinessEntityInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    isActive?: boolean
    emailVerified?: boolean
    emailVerificationToken?: string | null
    passwordResetToken?: string | null
    passwordResetExpires?: Date | string | null
    lastLoginAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type GoogleAnalyticsIntegrationCreateManyBusinessEntityInput = {
    id?: string
    propertyId: string
    clientId: string
    clientSecret: string
    refreshToken?: string | null
    accessToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    isActive?: boolean
    lastSyncAt?: Date | string | null
    syncFrequency?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type N8nIntegrationCreateManyBusinessEntityInput = {
    id?: string
    webhookUrl: string
    webhookToken: string
    isActive?: boolean
    lastWebhookAt?: Date | string | null
    webhookCount?: number
    lastErrorAt?: Date | string | null
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateWithoutBusinessEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateWithoutBusinessEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyWithoutBusinessEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoogleAnalyticsIntegrationUpdateWithoutBusinessEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    clientSecret?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncFrequency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoogleAnalyticsIntegrationUncheckedUpdateWithoutBusinessEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    clientSecret?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncFrequency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type GoogleAnalyticsIntegrationUncheckedUpdateManyWithoutBusinessEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    clientSecret?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastSyncAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    syncFrequency?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type N8nIntegrationUpdateWithoutBusinessEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    webhookUrl?: StringFieldUpdateOperationsInput | string
    webhookToken?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastWebhookAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    webhookCount?: IntFieldUpdateOperationsInput | number
    lastErrorAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    webhookEvents?: N8nWebhookEventUpdateManyWithoutN8nIntegrationNestedInput
  }

  export type N8nIntegrationUncheckedUpdateWithoutBusinessEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    webhookUrl?: StringFieldUpdateOperationsInput | string
    webhookToken?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastWebhookAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    webhookCount?: IntFieldUpdateOperationsInput | number
    lastErrorAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    webhookEvents?: N8nWebhookEventUncheckedUpdateManyWithoutN8nIntegrationNestedInput
  }

  export type N8nIntegrationUncheckedUpdateManyWithoutBusinessEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    webhookUrl?: StringFieldUpdateOperationsInput | string
    webhookToken?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastWebhookAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    webhookCount?: IntFieldUpdateOperationsInput | number
    lastErrorAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type N8nWebhookEventCreateManyN8nIntegrationInput = {
    id?: string
    workflowId: string
    workflowName: string
    executionId: string
    eventType: string
    status: string
    startTime: Date | string
    endTime?: Date | string | null
    duration?: number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type N8nWebhookEventUpdateWithoutN8nIntegrationInput = {
    id?: StringFieldUpdateOperationsInput | string
    workflowId?: StringFieldUpdateOperationsInput | string
    workflowName?: StringFieldUpdateOperationsInput | string
    executionId?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type N8nWebhookEventUncheckedUpdateWithoutN8nIntegrationInput = {
    id?: StringFieldUpdateOperationsInput | string
    workflowId?: StringFieldUpdateOperationsInput | string
    workflowName?: StringFieldUpdateOperationsInput | string
    executionId?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type N8nWebhookEventUncheckedUpdateManyWithoutN8nIntegrationInput = {
    id?: StringFieldUpdateOperationsInput | string
    workflowId?: StringFieldUpdateOperationsInput | string
    workflowName?: StringFieldUpdateOperationsInput | string
    executionId?: StringFieldUpdateOperationsInput | string
    eventType?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    startTime?: DateTimeFieldUpdateOperationsInput | Date | string
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    inputData?: JsonNullValueInput | InputJsonValue
    outputData?: JsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use BusinessEntityCountOutputTypeDefaultArgs instead
     */
    export type BusinessEntityCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BusinessEntityCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use N8nIntegrationCountOutputTypeDefaultArgs instead
     */
    export type N8nIntegrationCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = N8nIntegrationCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BusinessEntityDefaultArgs instead
     */
    export type BusinessEntityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BusinessEntityDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GoogleAnalyticsIntegrationDefaultArgs instead
     */
    export type GoogleAnalyticsIntegrationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = GoogleAnalyticsIntegrationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use N8nIntegrationDefaultArgs instead
     */
    export type N8nIntegrationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = N8nIntegrationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use N8nWebhookEventDefaultArgs instead
     */
    export type N8nWebhookEventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = N8nWebhookEventDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}