// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  password          String
  firstName         String
  lastName          String
  isActive          Boolean  @default(true)
  emailVerified     Boolean  @default(false)
  emailVerificationToken String?
  passwordResetToken String?
  passwordResetExpires DateTime?
  lastLoginAt       DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relationships
  businessEntityId  String
  businessEntity    BusinessEntity @relation(fields: [businessEntityId], references: [id])
  
  @@map("users")
  @@index([email])
  @@index([businessEntityId])
  @@index([isActive])
}

model BusinessEntity {
  id          String   @id @default(cuid())
  name        String
  description String?
  domain     String?   @unique
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relationships
  users      User[]
  googleAnalytics GoogleAnalyticsIntegration[]
  n8nIntegrations N8nIntegration[]
  
  @@map("business_entities")
  @@index([domain])
  @@index([isActive])
}

// Google Analytics 4 Integration
model GoogleAnalyticsIntegration {
  id                    String   @id @default(cuid())
  businessEntityId      String
  propertyId            String   // GA4 Property ID
  clientId              String   // OAuth2 Client ID
  clientSecret          String   // OAuth2 Client Secret
  refreshToken          String?  // OAuth2 Refresh Token
  accessToken           String?  // OAuth2 Access Token
  accessTokenExpiresAt  DateTime?
  isActive              Boolean  @default(true)
  lastSyncAt            DateTime?
  syncFrequency         String   @default("daily") // daily, hourly, real-time
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  // Relationships
  businessEntity        BusinessEntity @relation(fields: [businessEntityId], references: [id])
  
  @@map("google_analytics_integrations")
  @@index([businessEntityId])
  @@index([propertyId])
  @@index([isActive])
}

// n8n Integration
model N8nIntegration {
  id                String   @id @default(cuid())
  businessEntityId  String
  webhookUrl        String   // n8n webhook URL
  webhookToken      String   // Secret token for webhook authentication
  isActive          Boolean  @default(true)
  lastWebhookAt     DateTime?
  webhookCount      Int      @default(0)
  lastErrorAt       DateTime?
  errorMessage      String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Relationships
  businessEntity    BusinessEntity @relation(fields: [businessEntityId], references: [id])
  webhookEvents     N8nWebhookEvent[]
  
  @@map("n8n_integrations")
  @@index([businessEntityId])
  @@index([webhookToken])
  @@index([isActive])
}

// n8n Webhook Events
model N8nWebhookEvent {
  id                  String   @id @default(cuid())
  n8nIntegrationId    String
  workflowId          String
  workflowName        String
  executionId         String
  eventType           String   // workflow_started, workflow_completed, workflow_failed, etc.
  status              String   // running, completed, failed, cancelled
  startTime           DateTime
  endTime             DateTime?
  duration            Int?     // Duration in milliseconds
  inputData           Json     @default("{}")
  outputData          Json     @default("{}")
  errorMessage        String?
  metadata            Json     @default("{}")
  createdAt           DateTime @default(now())
  
  // Relationships
  n8nIntegration      N8nIntegration @relation(fields: [n8nIntegrationId], references: [id])
  
  @@map("n8n_webhook_events")
  @@index([n8nIntegrationId])
  @@index([workflowId])
  @@index([executionId])
  @@index([eventType])
  @@index([status])
  @@index([startTime])
  @@index([createdAt])
}
